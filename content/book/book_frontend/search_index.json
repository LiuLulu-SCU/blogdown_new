[["index.html", "Web开发学习笔记 前言", " Web开发学习笔记 刘卢路 2021年9月28日 前言 本文为B站pink老师的视频学习笔记。分为HTML、CSS和JavaScript三大部分。所谓好记性不如烂笔头，唯有一点点累积，才能汇聚成知识的海洋。现在，我对这段时间的学习做一个总结。✍ 勤做笔记不仅可以让自己学的扎实，更重要的是可以让自己少走弯路。有人说:“再次翻开笔记是什么感觉”，我的回答是:“怦然心动的感觉”。或许笔记不一定十全十美，但肯定会让你有种心动的感觉。 "],["认识web.html", "1 认识Web 1.1 网页 1.2 浏览器 1.3 Web标准", " 1 认识Web 本篇文章主要由五个章节构成，从WEB标准到初识HTML，接着学习HTML常用标签，最后学习表格列表和表单。开始充电之旅啦~~~ 1.1 网页 网页是由文字、图像、音频、视频等元素构成。我们通常看到的网页是以.htm或.html后缀结尾的文件，因此将其俗称为HTML文件，它需要通过浏览器来阅读。 网站是网页的集合。 HTML是超文标记语言（Hyper Text Makeup Language），它是一种用来描述网页的一种语言。 HTML不是编程语言，而是一种标记语言（Makeup language），标记语言是一套标签标记（Makeup tag）。 所谓超文本，有两层含义： 它可以加入图片、声音、动画、多媒体等内容（超越了文本显著） 它可以从一个文件跳转到另一个文件，与世界各地主机文件连接（炒鸡连接文本） 网页的形成 网页是由网页元素组成的，这些元素是利用html标签描述出来，然后通过浏览器解析出来显示给用户。 前端人员开发代码→浏览器显示代码（解析、渲染）→生成Web页面 1.2 浏览器 浏览器是显示、运行网页的平台。IE、火狐（Firefox）、谷歌（Chrome）、Safari和欧鹏（Opera）被称为五大浏览器。 浏览器内核排版引擎、解释引擎、渲染引擎。负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。 表1.1: 浏览器内核 浏览器 内核 备注 IE Trident IE、猎豹安全、360极速浏览器、百度浏览器 Firefox Gecko 可惜这几年已经没落了，打开速度慢、升级频繁、猪一样的队友flash、神一样的对手chrome。 Safari Webkit 现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 了）。苹果感觉像被别人抢了媳妇，都哭晕在厕所里面了。 Chrome Chromium/Blink 在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。Blink 其实是 WebKit 的分支。大部分国产浏览器最新版都采用Blink内核。二次开发 Opera Blink 现在跟随chrome用blink内核。 1.3 Web标准 Web标准是由W3C组织和其他标准化组织制定的一系列标准的集合。W3C（万维网联盟）是国际最著名的标准化组织。 1.3.1 为什么需要Web标准 浏览器不同，它们显示页面或者排版就有些许差异。 遵循Web标准除了可以让不同开发人员写出的页面更标准，更统一外，还有以下优点： 易于维护：只需更改CSS文件，就可以改变整站的样式 页面响应快：HTML文档体积变小，响应时间短 可访问性：语义化的HTML（结构和表现相分离的HTML）编写的网页文件，更容易被屏幕阅读器识别 设备兼容性：不同的样式表可以让网页在不同的设备上呈现不同的样式 搜索引擎：语义化的HTML能更容易被搜索引擎解析，提升排名 1.3.2 Web标准构成 主要包括结构标准（Structure），表现标准（Presentation）和行为标准（Behavior）。 结构标准用于对网页元素进行整理和分类，现阶段主要学的是HTML 表现标准用于设置网页元素的版式、颜色、大小等外观属性，主要指的是CSS 行为标准用于对网页模型的定义及交互的编写，现阶段主要学的是JavaScript 表1.2: Web标准 标准 说明 结构标准 用于对网页元素进行整理和分类，现阶段主要学的是HTML 表现标准 用于设置网页元素的版式、颜色、大小等外观属性，主要指的是CSS 行为标准 用于对网页模型的定义及交互的编写，现阶段主要学的是JavaScript Web标准提出的最佳体验方案：结构、样式、行为相分离。简单理解：结构写到HTML文件中、表现写到CSS文件中、行为写到JavaScript中。 图1.1: Web标准 "],["html初识.html", "2 HTML初识 2.1 基本语法规范 2.2 基本结构标签", " 2 HTML初识 2.1 基本语法规范 2.1.1 基本语法概述 HTML标签是由尖括号包围的关键词，例如&lt;html&gt;。 HTML标签通常是成对出现的，例如&lt;html&gt;和&lt;/html&gt;，我们称为双标签。标签对中的第一个标签是开始标签，第二个标签是结束标签。 有些特殊标签必须是单个标签（极少情况），例如&lt;br /&gt;，我们称为单标签。 2.1.2 标签关系 双标签关系可以分为两类：包含关系和并列关系。 包含关系，又被称为父子关系。 eg：title标签包含于head标签中。 &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;/head&gt; 并列关系，又被称为兄弟关系。 eg：title标签和head标签并列。 &lt;head&gt;&lt;/head&gt; &lt;body&gt;&lt;/body&gt; 2.2 基本结构标签 每个网页都会有一个基本的结构标签（也被称为骨架标签），页面内容也是在这些基本标签上书写。HTML页面也称为HTML文档。 &lt;html&gt; &lt;head&gt; &lt;title&gt;第一个页面&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 键盘敲烂，工资过万 &lt;/body&gt; &lt;/html&gt; HTML文档的后缀名必须是.htm或.html，浏览器的作用是读取HTML文档，并以网页形式显示他们。此时，用浏览器打开这个网页，我们就可以预览我们写的HTML文件了。 表2.1: 基本结构标签 标题名 定义 说明 &lt;html&gt;&lt;/html&gt; HTML标签 页面中最大的标签,我们称为根标签 &lt;head&gt;&lt;/head&gt; 文档头部 注意head标签中我们必须要设置的标签是tittle &lt;title&gt;&lt;/title&gt; 文档标题 让页面拥有一个属于自己的网页标题 &lt;body&gt;&lt;/body&gt; 文档主体 元素包含文档的所有内容，页面内容基本都是放到body里面 图2.1: HTML骨架标签 "],["网页开发工具.html", "3 网页开发工具 3.1 配置VSCode 3.2 VSCode工具生成骨架标签新增代码", " 3 网页开发工具 3.1 配置VSCode 下载并安装Visual Studio Code软件 新建文件（快捷键Ctrl+N），然后保存（快捷键Ctrl+S）后缀名为.html的文件，在第一行代码中输入!，再按Tab键，即可自动生成HTML的骨架文件。安装插件（Open in Browser）后可在浏览器中预览，单击鼠标右键，在弹出窗口中点击Open in Default Browser。 接下来介绍一下如何安装插件。 图3.1: 安装插件 一些常用的插件： 表1.2: 基本结构标签 插件 作用 Chinese (Simplified) Language Pack of VS Code 中文（简体）语言包 Open in Browser 右键选择浏览器打开HTML文件 JS-CSS-HTML Formatter 每次保存，都会自动格式化JS CSS和HTML代码 Auto Rename Tag 自动重命名配对的HTML/XML标签 CSS peek 追踪至样式 3.2 VSCode工具生成骨架标签新增代码 下面的代码是VSCode生产的骨架代码 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; &lt;/html&gt; 3.2.1 文档类型&lt;!DOCTYPE&gt; &lt;!DOCTYPE&gt;是文档类型（Document type）声明，作用是告诉浏览器使用哪种HTML版本来显示网页。 &lt;!DOCTYPE html&gt; 这句代码的意思是：当前页面采取的是HTML5版本来显示网页。注意&lt;!DOCTYPE&gt;声明位于文档中的首行，处于&lt;html&gt;标签之前，&lt;!DOCTYPE&gt;不是一个HTML标签，它就是文档类型声明标签。 3.2.2 页面语言lang lang用来定义当前文档显示的语言（language）。en定义语言为英语，zh-CN定义语言为中文。其实对于文档显示来说，定义成en的文档也可以显示中文，定义成zh-CN的文档也可以显示英文这个属性对浏览器和搜索引擎（百度.谷歌等）还是有作用的。 3.2.3 字符集charset 字符集（Character set）是多个字符的集合。以便计算机能够识别和存储各种文字。在&lt;head&gt;标签内，可以通过&lt;meta&gt;标签的charset属性来规定HTML文档应该使用哪种字符编码。 &lt;meta charset=&quot; UTF-8&quot;/&gt; charset常用的值：GB2312、BlG5、GBK和UTF-8，其中UTF-8也被称为万国码，基本包含了全世界所有国家需要用到的字符。 注意∶上面语法是必须要写的代码，否则可能引起乱码的情况。一般情况下，统一使用“UTF-8”编码，尽量统一写成标准的”UTF-8”，不要写成”utf8”或”UTF8”。 "],["html常用标签.html", "4 HTML常用标签 4.1 语义标签 4.2 标题标签 4.3 段落标签 4.4 换行标签 4.5 文本格式化标签 4.6 布局标签 4.7 图像标签和路径 4.8 超链接 4.9 注释 4.10 特殊字符 4.11 表格标签 4.12 列表标签 4.13 表单标签 4.14 文档查阅 4.15 案例学习", " 4 HTML常用标签 4.1 语义标签 学习标签是有技巧的，重点是记住每个标签的语义。简单理解就是指标签的含义，即这个标签是用来干嘛的。根据标签的语义，在合适的地方给一个最为合理的标签，可以让页面结构更清晰。 图3.1: 语义标签 4.2 标题标签 为了使网页更具有语义化，我们经常会在页面中用到标题标签。HTML提供了6个等级的网页标题，即&lt;h1&gt; - &lt;h6&gt;。 &lt;h1&gt;我是一级标题&lt;/h1&gt; h单词head 的缩写，意为头部、标题。 标签语义：作为标题使用，并且依据重要性递减。 特点： 加了标题的文字会变的加粗，字号也会依次变大。 一个标题独占一行。 &lt;h1&gt;标题一共六级选，&lt;/h1&gt; &lt;h2&gt;文字加粗一行显。&lt;/h2&gt; &lt;h3&gt;由大到小依次减，&lt;/h3&gt; &lt;h4&gt;从重到轻随之变。&lt;/h4&gt; &lt;h5&gt;语法规范书写后，&lt;/h5&gt; &lt;h6&gt;具体效果刷新见。&lt;/h6&gt; 4.3 段落标签 在网页中，要把文字有条理地显示出来，就需要将这些文字分段显示。在HTML标签中，&lt;p&gt;标签用于定义段落，它可以将整个网页分为若干个段落。 &lt;p&gt;我是一个段落标签&lt;/p&gt; p是单词paragraph的缩写，意为段落。标签语义：可以把HTML文档分割为若干段落。 特点∶ 文本在一个段落中会根据浏览器窗口的大小自动换行。 段落和段落之间保有空隙。 4.4 换行标签 在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后才自动换行。如果希望某段文本强制换行显示，就需要使用换行标签&lt;br /&gt;。 &lt;br /&gt; br是单词break的缩写，意为打断、换行。标签语义∶强制换行。 特点︰ &lt;br /&gt;是个单标签。 &lt;br /&gt;标签只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距。 4.5 文本格式化标签 在网页中，有时需要为文字设置粗体、斜体或下划线等效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。 标签语义：突出重要性,比普通文字更重要. 表4.1: 文本格式化标签 语义 标签 单词 实例 说明 加粗 &lt;strong&gt;&lt;/strong&gt;或者&lt;b&gt;&lt;/b&gt; strong 加粗 更推荐使用&lt;strong&gt;标签加粗语义更强烈 倾斜 &lt;em&gt;&lt;/em&gt;或者&lt;i&gt;&lt;/i&gt; emphasize 斜体 更推荐使用&lt;em&gt;标签加粗语义更强烈 删除线 &lt;del&gt;&lt;/del&gt;或者&lt;s&gt;&lt;/s&gt; delete 删除线 更推荐使用&lt;del&gt;标签加粗语义更强烈 下划线 &lt;ins&gt;&lt;/ins&gt;或者&lt;u&gt;&lt;/u&gt; inserted 下划线 更推荐使用&lt;ins&gt;标签加粗语义更强烈 4.6 布局标签 &lt;div&gt;和&lt;span&gt;是没有语义的，它们就是一个盒子，用来装内容的。 &lt;div&gt;这是头部&lt;/div&gt; &lt;span&gt;今日价格&lt;/span&gt; div是division的缩写，表示分割、分区。span意为跨度、跨距。 特点∶ &lt;div&gt;标签用来布局，但是现在一行只能放一个&lt;div&gt;。大盒子 &lt;span&gt;标签用来布局，一行上可以多个&lt;span&gt;。小盒子 4.7 图像标签和路径 4.7.1 图像标签 在HTML标签中，&lt;img&gt;标签用于定义HTML页面中的图像。 &lt;img src=&quot;图像URL”/&gt; img单词image的缩写，意为图像。 src是标签的必须属性，是单词source的缩写。它用于指定图像文件的路径和文件名。 所谓属性︰简单理解就是属于这个图像标签的特性。 表4.2: 图像标签常见属性 属性 属性值 单词 说明 src 图片路径 source 必须属性 alt 文本 alternate 替换文本，图像不能显示的文字 title 文本 title 提示文本。鼠标放到图像上，显示的文字 width 像素 width 设置图像的宽度 heigth 像素 heigth 设置图像的高度 border 像素 border 设置图像的边框粗细 图像标签属性注意点∶ 图像标签可以拥有多个属性，必须写在标签名的后面。 属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分 属性采取键值对的格式，即key= “value”的格式，属性=“属性值” 重点掌握点: 请说出图像标签哪个属性是必须要写的? 请说出图像标签中alt和title属性区别? 4.7.2 路径 实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹来管理他们。 目录文件夹：就是普通文件夹，里面只不过存放了我们做页面所需要的相关素材，比如html文件、图片等。 根目录：打开目录文件夹的第一层就是根目录. VSCode打开目录文件夹：文件→打开文件→选择目录文件夹，后期方便管理文件 页面中的图片会非常多，通常我们会新建一个文件夹来存放这些图像文件( images )，这时再查找图像，就需要采用“路径”的方式来指定图像文件的位置。 路径可以分为︰ 相对路径 绝对路径 相对路径：以引用文件所在位置为参考基础，而建立出的目录路径。这里简单来说，图片相对于HTML页面的位置。 表4.3: 相对路径 相对路径分类 符号 说明 例子 同一级路径 图像文件位于HTML文件同一级 &lt;img src=\"baidu.gif\" /&gt; 下一级路劲 / 图像文件位于HTML文件下一级 &lt;img src=\"images/baidu.gif\" /&gt; 上一级路径 ../ 图像文件位于HTML文件上一级如 &lt;img src=\"../baidu.gif\" /&gt; 以此类推，上上一级路径就是 &lt;img src=\"../../baidu.gif\" /&gt; 相对路径是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级、下一级和同一级就是图片相对于HTML页面的位置。 绝对路径︰是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径。 例如，“D:\\web\\imglogo.gif”或完整的网络地址“http://www.itcast.cn/images/logo.gif”。 4.8 超链接 在HTML标签中，&lt;a&gt;标签用于定义超链接，作用是从一个页面连接到另一个页面。 4.8.1 链接的语法格式 &lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt;文本或图像&lt;/a&gt; a是单词anchor的缩写，意为∶锚。 两个属性的作用如下: 表4.4: 超链接标签 属性 作用 href 用于指定链接目标的url地址，是必须属性,当为标签应用href属性时，它就具有了超链接的功能 target 用于指定链接页面的打开方式，其中_self为默认值，_blank为在新窗口中打开方式。 注：href是Hypertext REFerence，超文本参考的缩写 4.8.2 链接的分类 外部链接：例如&lt;a href=\"http://www.qq.com\" target=\"_blank\"&gt;腾讯&lt;/a&gt; 内部链接：例如&lt;a href=\"index.html\" target=\"_self\"&gt;首页&lt;/a&gt; 空链接：如果当时没有确定链接目标时，如&lt;a href=\"#\"&gt;首页&lt;/a &gt; 下载链接：如果href里面地址是一个文件或者压缩包，会下载这个文件。 网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接. 锚点链接:点我们点击链接,可以快速定位到页面中的某个位置. 在链接文本的href属性中，设置属性值为#名字的形式，如&lt;a href=\"#two\"&gt;第2集&lt;/a&gt; 找到目标位置标签，里面添加一个id属性=刚才的名字，如:&lt;h3 id=\"two\"&gt;第2集介绍&lt;/h3&gt; src 和 href 的区别 一句话概括:src 是引入资源的 href 是跳转url的 src用于替换当前元素，href用于在当前文档和引用资源之间确立联系。 src是source的缩写，指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；在请求src资源时会将其指向的资源下载并应用到文档内，例如js脚本，img图片和frame等元素。当浏览器解析到该元素时，会暂停其他资源的下载和处理，直到将该资源加载、编译、执行完毕，图片和框架等元素也如此，类似于将所指向资源嵌入当前标签内。这也是为什么将js脚本放在底部而不是头部。 href是Hypertext Reference的缩写，指向网络资源所在位置，建立和当前元素（锚点）或当前文档（链接）之间的链接。如果我们在文档中添加那么浏览器会识别该文档为css文件，就会并行下载资源并且不会停止对当前文档的处理。这也是为什么建议使用link方式来加载css。 4.9 注释 如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。HTML中的注释以&lt;!--开头，以--&gt;结束。 &lt;!--注释语句--&gt; 快捷键:Ctrl + / 一句话:注释标签里面的内容是给程序猿看的,这个代码是不执行不显示到页面中的. 添加注释是为了更好地解释代码的功能，便于相关开发人员理解和阅读代码，程序是不会执行注释内容的。 团队约定：注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行 4.10 特殊字符 HTML页面中，一些特殊符号很难或者不方便直接使用，此时我们就可以使用下面的字符来代替。 表4.5: HTML特殊字符 特殊字符 描述 字符的代码 &lt; 小于号 &amp;lt; &gt; 大于号 &amp;gt; 空格 空格 &amp;nbsp; &amp; 和号 &amp;amp; ± 正负号 &amp;plusmn; © 版权 &amp;copy; ® 商标 &amp;reg; 注：重点掌握小于号、大于号和空格，其余可查询 HTML特殊字符对照表。 4.11 表格标签 表格不是用来布局页面的,而是用来展示数据的。 4.11.1 表格的基本语法 &lt;table&gt; &lt;tr&gt; &lt;td&gt;单元格内的文字&lt;/td&gt; ... &lt;/tr&gt; ... &lt;/table&gt; table、tr、td，他们是创建表格的基本标签，缺一不可 &lt;table&gt; &lt;/table&gt;是用于定义表格的标签。 &lt;tr&gt; &lt;/tr&gt;标签用于定义表格中的行，必须嵌套在&lt;table&gt; &lt;/table&gt;标签中。 &lt;td&gt; &lt;/td&gt;用于定义表格中的单元格，必须嵌套在&lt;tr&gt;&lt;/tr&gt;标签中。 4．字母 td指表格数据( table data )，即数据单元格的内容。 &lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;td&gt;姓名&lt;/td&gt; &lt;td&gt;性别&lt;/td&gt; &lt;td&gt;年龄&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;刘德华&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张学友&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;58&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; 图4.1: 基本表格 4.11.2 表头单元格标签 一般表头单元格位于表格的第一行或第一列，表头单元格里面的文本内容加粗居中显示。&lt;th&gt;标签表示HTML表格的表头部分(table head的缩写) &lt;body&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;刘德华&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张学友&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;58&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; 图4.2: 表格表头 4.11.3 表格属性 表格标签这部分属性我们实际开发我们不常用，属性均可通过CSS来设置。 表4.6: 表格属性 属性名 属性值 描述 align left、center、right 规定表格相对周围元素的对齐方式 border 1或”” 规定表格单元是否拥有边框，默认为”“，表示没有边框 cellpadding 像素值 规定单元边框与其文字内容之间的空白，默认1像素 cellspacing 像素值 规定单元格边框与单元格边框之间的空白，默认2像素 width 像素值或百分比 规定表格的宽度 heigth 像素值或百分比 规定表格的高度 &lt;body&gt; &lt;!-- 表格的属性表情要写到表格标签table里面 --&gt; &lt;table align=&quot;center&quot; border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;500&quot; height=&quot;150&quot;&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;刘德华&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张学友&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;58&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; 图4.3: 表格属性 4.11.4 表格结构标签 使用场景:因为表格可能很长,为了更好的表示表格的语义，可以将表格分割成表格头部和表格主体两大部分.在表格标签中，分别用&lt;thead&gt;标签表格的头部区域、&lt;tbody&gt;标签表格的主体区域.这样可以更好的分清表格结构。 &lt;body&gt; &lt;!-- 表格的属性表情要写到表格标签table里面 --&gt; &lt;table align=&quot;center&quot; border=&quot;1&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot; width=&quot;500&quot; height=&quot;150&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;性别&lt;/th&gt; &lt;th&gt;年龄&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;刘德华&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;56&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;张学友&lt;/td&gt; &lt;td&gt;男&lt;/td&gt; &lt;td&gt;58&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; 图4.4: 表格结构 &lt;thead&gt;&lt;/thead&gt;：用于定义表格的头部。用来放标题之类的东西。 内部必须拥有 标签！ &lt;tbody&gt;&lt;/tbody&gt;：用于定义表格的主体。放数据本体 。 &lt;tfoot&gt;&lt;/tfoot&gt;放表格的脚注之类。 以上标签都是放到table标签中。 4.11.5 合并单元格 特殊情况下,可以把多个单元格合并为一个单元格,这里学会最简单的合并单元格即可。 合并单元格步骤： 先确定是跨行还是跨列合并。 找到目标单元格.写上合并方式=合并的单元格数量。比如:&lt;td colspan= “2”&gt;&lt;/td&gt;。 删除多余的单元格。 4.11.5.1 合并单元格的方式 跨行合并：rowspan=“合并单元格的个数” 跨列合并：colspan=“合并单元格的个数” 图4.5: 表格单元格合并方式 4.11.5.2 目标单元格 跨行：最上侧单元格为目标单元格，写合并代码 跨列：最左侧单元格为目标单元格，写合并代码 4.11.5.3 例子 生成一个三行三列的表格，并合并第一行的二三列，第一列的二三行 &lt;body&gt; &lt;!-- 三行三列的表格 --&gt; &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; width=&quot;500&quot; height=&quot;150&quot;&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; 图4.6: 原始表格 &lt;body&gt; &lt;!-- 三行三列的表格 --&gt; &lt;table border=&quot;1&quot; cellspacing=&quot;0&quot; width=&quot;500&quot; height=&quot;150&quot;&gt; &lt;tr&gt; &lt;!-- 合并第一行的二三列 --&gt; &lt;td&gt;&lt;/td&gt; &lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;!-- 合并第一列的二三行 --&gt; &lt;td rowspan=&quot;2&quot;&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt; 图4.7: 合并单元格后的表格 4.12 列表标签 表格是用来显示数据的，那么列表就是用来布局的。 列表最大的特点就是整齐、整洁、有序，它作为布局会更加自由和方便。根据使用情景不同，列表可以分为三大类:无序列表、有序列表和自定义列表。 图4.8: 列表类型 4.12.1 无序列表 Unordered &lt;ul&gt;标签表示HTML页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用&lt;li&gt;标签定义。 无序列表的基本语法格式如下: &lt;ul&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt; ...... &lt;/ul&gt; 注意： 无序列表的各个列表项之间没有顺序级别之分，是并列的 &lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;，直接在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或者文字的做法是不被允许的 &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素 无序列表会带有自己的样式属性（默认是小圆点·），但在实际使用时，我们会使用CSS来设置。 list-style: none;即可不显示小圆点的。 例子 &lt;body&gt; &lt;h4&gt;你喜欢吃的食物&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;榴莲&lt;/li&gt; &lt;li&gt;臭豆腐&lt;/li&gt; &lt;li&gt;鲱鱼罐头&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 图4.9: 无序列表 4.12.2 有序列表 Ordered 有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义。 在HTML标签中，&lt;ol&gt;标签用于定义有序列表，列表排序以数字来显示，并且使用&lt;li&gt;标签来定义列表项。有序列表的基本语法格式如下: &lt;ol&gt; &lt;li&gt;列表项1&lt;/li&gt; &lt;li&gt;列表项2&lt;/li&gt; &lt;li&gt;列表项3&lt;/li&gt; &lt;/ol&gt; 注意： - &lt;ol&gt;&lt;/ol&gt;中只能嵌套&lt;li&gt; &lt;/li&gt;，直接在&lt;ol&gt;&lt;/ol&gt;标签中输入其他标签或者文字的做法是不被允许的。 - &lt;li&gt;与&lt;/li&gt;之间相当于一个容器，可以容纳所有元素。 - 有序列表会带有自己样式属性，但在实际使用时，我们会使用CSS来设置。 例子 &lt;body&gt; &lt;h4&gt;粉丝排行榜&lt;/h4&gt; &lt;ol&gt; &lt;li&gt;刘德华10000&lt;/li&gt; &lt;li&gt;刘若英5000&lt;/li&gt; &lt;li&gt;刘卢路1&lt;/li&gt; &lt;/ol&gt; &lt;/body&gt; 图4.10: 有序列表 4.12.3 自定义列表 自定义列表的使用场景: 自定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。 在HTML标签中，&lt;dl&gt;标签用于定义描述列表(或定义列表)，该标签会与&lt;dt&gt;(定义项目/名字)和&lt;dd&gt;(描述每一个项目/名字)一起使用。 dl:description list dt:description term dd:description description &lt;dl&gt; &lt;dt&gt;名词1&lt;/dt&gt; &lt;dd&gt;名词1解释1&lt;/dd&gt; &lt;dd&gt;名词1解释2&lt;/dd&gt; ... &lt;dt&gt;名词2&lt;/dt&gt; &lt;dd&gt;名词2解释1&lt;/dd&gt; &lt;dd&gt;名词2解释2&lt;/dd&gt; ... &lt;/dl&gt; 例子 &lt;body&gt; &lt;dl&gt; &lt;dt&gt;关注我们&lt;/dt&gt; &lt;dd&gt;新浪微博&lt;/dd&gt; &lt;dd&gt;官方微信&lt;/dd&gt; &lt;dd&gt;联系我们&lt;/dd&gt; &lt;/dl&gt; &lt;dl&gt; &lt;dt&gt;关注我们&lt;/dt&gt; &lt;dd&gt;新浪微博&lt;/dd&gt; &lt;dd&gt;官方微信&lt;/dd&gt; &lt;dd&gt;联系我们&lt;/dd&gt; &lt;/dl&gt; &lt;/body&gt; 图4.11: 描述列表 注意： &lt;dl&gt;&lt;/dl&gt;里面只能包含&lt;dt&gt;和&lt;dd&gt;。 &lt;dt&gt;和&lt;dd&gt;个数没有限制，经常是一个&lt;dt&gt;对应多个&lt;dd&gt;。 4.12.4 列表总结 表4.7: 表格总结 标签名 定义 说明 &lt;ul&gt;&lt;/ul&gt; 无序列表 里面只能包含li没有顺序，使用较多。li里面可以包含任何标签 &lt;ol&gt;&lt;/ol&gt; 有序列表 里面只能包含li有顺序，使用相对较少。li里面可以包含任何标签 &lt;dl&gt;&lt;/dl&gt; 自定义列表 里面只能包含dt和dd 。dt和dd里面可以放任何标签 4.13 表单标签 4.13.1 为什么需要表单 使用表单目的是为了收集用户信息。在我们网页中，我们也需要跟用户进行交互，收集用户资料，此时就需要表单。 4.13.2 表单的组成 在HTML中，一个完整的表单通常由表单域、表单控件（表单元素）和提示信息3个部分组成。 图4.12: 表单的组成 4.13.2.1 表单域 表单域是一个包含表单元素的区域。 在HTML标签中，&lt;form&gt;标签用于定义表单域，以实现用户信息的收集和传递。&lt;form&gt; 会把它范围内的表单元素信息提交给服务器（后台）。 &lt;form action=&quot;url地址” method=&quot;提交方式&quot; name=&quot;表单域名称&quot;&gt; 各种表单元素控件 &lt;/form&gt; 表4.8: 表单域常用属性 属性 属性值 作用 action url地址 用于指定接收并处理表单数据的服务器程序的url地址。 method get/post 用于设置表单数据的提交方式，其取值为get或post name 名称 用于指定表单的名称，以区分同一个页面中的多个表单域。 我们暂时不用表单域提交数据,只需要写上 form标签即可.就业班等学习服务器编程阶段会重新讲解。 这里只需要记住两点: 1.在我们写表单元素之前,应该有个表单域把他们进行包含. 2.表单域是form标签. 4.13.2.2 表单控件/表单元素 在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。接下来我们讲解: 1.input输入表单元素 2.select下拉表单元素 3.textarea文本域元素 4.13.2.2.1 &lt;input&gt;表单元素 在英文单词中，input是输入的意思，而在表单元素中&lt;input&gt;标签用于收集用户信息。 在&lt;input&gt;标签中，包含一个type属性，根据不同的type属性值，输入字段拥有很多种形式(可以是文本字段、复选框、掩码后的文本控件、单选按钮、按钮等)。 &lt;input type=&quot;属性值&quot;/&gt; &lt;input/&gt;标签为单标签 type属性设置不同的属性值用来指定不同的控件类型 表4.9: type属性 属性 描述 button 定义可点击按钮(多数情况下，用于通过JavaScript启动脚本) checkbox 定义复选框 file 定义输入字段和“浏览”按钮，供文件上传 hidden 定义隐藏的输入字段 image 定义图像形式的提交按钮 password 定义密码字段。该字段中的字符被掩码 radio 定义单选按钮 reset 定义重置按钮。重置按钮会清除表单中的所有数据 submit 定义提交按钮。提交按钮会把表单数据发送到服务器 text 定义单行的输入字段，用户可在其中输入文本。默认宽度为20个字符 其他属性 表4.10: 表单其他属性 属性 属性值 描述 name 用户自定义 定义input元素的名称 value 用户自定义 规定input元素的值 checked checked 规定input中单选按钮和复选框原始首次加载时应当被选中 maxlength 正整数 规定输入字段的字符最大长度 name 和value是每个表单元素都有的属性值主要给后台人员使用. name表单元素的名字,要求单选按钮和复选框要有相同的name值 checked属性主要针对于单选按钮和复选框,主要作用一打开页面,就要可以默认选中某个表单元素. maxlength是用户可以在表单元素输入的最大字符数,一般较少使用. &lt;body&gt; &lt;form action=&quot;demo.php&quot; method=&quot;get&quot; name=&quot;name1&quot;&gt; text 文本框 用户可以输入任何文章 &lt;br&gt; 用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;请输入用户名&quot;&gt; &lt;br&gt; password 密码框 用户看不见输入的密码 &lt;br&gt; 密码：&lt;input type=&quot;password&quot; name=&quot;psw&quot;&gt;&lt;br&gt; radio 是单选按钮，可以实现单选功能 每个选项的name必须一样&lt;br&gt; 性别：男&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;男&quot;&gt; 女&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;女&quot; checked=&quot;checked&quot;&gt; &lt;br&gt; checkbox 是复选框，可以实现多选功能 &lt;br&gt; 爱好：吃饭&lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;吃饭&quot; checked=&quot;checked&quot;&gt; 睡觉 &lt;input type=&quot;checkbox&quot; name=&quot;hobby&quot; value=&quot;睡觉&quot; checked=&quot;checked&quot;&gt; 打豆豆 &lt;input type=&quot;checkbox&quot; value=&quot;打豆豆&quot;&gt; &lt;br&gt; 点击了提交按钮,可以把表单域form里面的表单元素里面的值提交给后台服务器&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;免费注册&quot;&gt; &lt;br&gt; 重置按钮可以还原表单元素初始的默认状态 &lt;br&gt; &lt;input type=&quot;reset&quot; value=&quot;重新填写&quot;&gt; &lt;br&gt; 普通按钮 结合js一起使用&lt;br&gt; &lt;input type=&quot;button&quot; value=&quot;获取短信验证码&quot;&gt; &lt;br&gt; 文件域 用于上传文件 上传头像：&lt;input type=&quot;file&quot;&gt; &lt;/form&gt; &lt;/body&gt; text 文本框 用户可以输入任何文章 用户名： password 密码框 用户看不见输入的密码 密码： radio 是单选按钮，可以实现单选功能 每个选项的name必须一样 性别：男 女 checkbox 是复选框，可以实现多选功能 爱好：吃饭 睡觉 打豆豆 点击了提交按钮,可以把表单域form里面的表单元素里面的值提交给后台服务器 重置按钮可以还原表单元素初始的默认状态 普通按钮 结合js一起使用 文件域 用于上传文件 上传头像： 4.13.2.2.2 label标签 &lt;label&gt;标签为input元素定义标注(标签)。 &lt;label&gt;标签用于绑定一个表单元素当点击标签内的文本时，浏览器就会自动将焦点(光标)转到或者选择对应的表单元素上用来增加用户体验. &lt;body&gt; &lt;label for=&quot;yhm&quot;&gt;用户名：&lt;/label&gt; &lt;input type=&quot;text&quot; id=&quot;yhm&quot;&gt; &lt;input type=&quot;radio&quot; id=&quot;male&quot; name=&quot;sex&quot;&gt; &lt;label for=&quot;male&quot;&gt;男&lt;/label&gt; &lt;input type=&quot;radio&quot; id=&quot;female&quot; name=&quot;sex&quot;&gt; &lt;label for=&quot;female&quot;&gt;女&lt;/label&gt; &lt;/body&gt; 用户名： 男 女 核心: &lt;label&gt;标签的for属性应当与相关元素的id属性相同。 4.13.2.2.3 &lt;select&gt;下拉表单元素 使用场景:在页面中，如果有多个选项让用户选择，并且想要节约页面空间时，我们可以使用&lt;select&gt;标签控件定义下拉列表。 &lt;select&gt;中至少包含一对&lt;option&gt; 。 在&lt;option&gt;中定义selected = \" selected “时，当前项即为默认选中项。 &lt;body&gt; &lt;form&gt; 籍贯： &lt;select&gt; &lt;option&gt;山东&lt;/option&gt; &lt;option&gt;北京&lt;/option&gt; &lt;option&gt;天津&lt;/option&gt; &lt;option selected=&quot;selected&quot;&gt;甘肃&lt;/option&gt; &lt;option&gt;四川&lt;/option&gt; &lt;option&gt;重庆&lt;/option&gt; &lt;/select&gt; &lt;/form&gt; &lt;/body&gt; 籍贯： 山东 北京 天津 甘肃 四川 重庆 4.13.2.2.4 &lt;textarea&gt;文本域元素 使用场景:当用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用&lt;textarea&gt;标签。 在表单元素中，&lt;textarea&gt;标签是用于定义多行文本输入的控件。 使用多行文本输入控件，可以输入更多的文字，该控件常见于留言板，评论。 通过&lt;textarea&gt;标签可以轻松地创建多行文本输入框。 cols=“每行中的字符数”，rowS=“显示的行数”，我们在实际开发中不会使用，都是用CSS来改变大小。 &lt;body&gt; &lt;form&gt; 今日反馈 &lt;textarea cols=&quot;50&quot; rows=&quot;5&quot;&gt;这个反馈是textarea做的&lt;/textarea&gt; &lt;/form&gt; &lt;/body&gt; 今日反馈 这个反馈是textarea做的 4.14 文档查阅 经常查阅文档是一个非常好的学习习惯。 推荐的网址: 百度 W3C MDN 4.15 案例学习 4.15.1 案例1 图4.13: 案例学习 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;水花61分伊戈达拉制胜抢断西决勇士再胜开拓者总分2-0&lt;/h1&gt; &lt;h4&gt;数据统计:水花兄弟合砍61分&lt;/h4&gt; &lt;p&gt; 库里22投11中，三分14投4中，罚球11罚全中得到37分8篮板8助攻，职业生涯季后赛得分30+次数来到35次 超过哈登排名现役第3位，仅次于詹姆斯和杜兰特。 &lt;/p&gt; &lt;p&gt; 汤普森22投8中，三分8投4中得到24分3篮板2助攻，德拉蒙德-格林得到16分10篮板7助攻5盖帽，凯文-鲁尼得到14分7篮板2助攻，今天勇士有7名替补出场。 &lt;/p&gt; &lt;h4&gt;兄弟对决升级:小库里给哥哥造成压力&lt;/h4&gt; &lt;p&gt; 库里兄弟是NBA历史上第一对在分区决赛相遇的兄弟。在西决第1场中，小库里没有给哥哥造成压力，他出场19分钟，7投1中只得到3分3篮板2助攻，在场期间输掉10分。 &lt;/p&gt; &lt;p&gt; 但在西决第2场中，小库里攻防两端都打出杰出的表现，全场送出4次抢断，包括直接抢断自己的哥哥库里，在防守端给库里造成了极大的困扰。 &lt;/p&gt; &lt;p&gt; 作者: pink老师&lt;br /&gt;2019-8-8 &lt;/p&gt; &lt;/body&gt; &lt;/html&gt; 4.15.2 案例2：表单 这个案例会用到 表格标签 列表标签 表单标签 图4.14: 效果图 &lt;body&gt; &lt;h4&gt;青春不常在抓紧谈恋爱&lt;/h4&gt; &lt;table width=&quot;500&quot; &gt; &lt;!-- 第一行 --&gt; &lt;tr&gt; &lt;td&gt;性别&lt;/td&gt; &lt;td&gt; &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;men&quot; checked=&quot;checked&quot;&gt; &lt;label for=&quot;men&quot;&gt;&lt;img src=&quot;fig/men.jpeg&quot; width=&quot;20&quot;&gt; 男&lt;/label&gt; &lt;input type=&quot;radio&quot; name=&quot;sex&quot; id=&quot;women&quot;&gt; &lt;label for=&quot;women&quot;&gt; &lt;img src=&quot;fig/women.jpeg&quot; width=&quot;20&quot;&gt; 女&lt;/label&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第二行 --&gt; &lt;tr&gt; &lt;td&gt;生日&lt;/td&gt; &lt;td&gt; &lt;select&gt; &lt;option&gt;--请选择年份--&lt;/option&gt; &lt;option&gt;2001&lt;/option&gt; &lt;option&gt;2002&lt;/option&gt; &lt;option&gt;2003&lt;/option&gt; &lt;/select&gt; &lt;select&gt; &lt;option&gt;--请选择月份--&lt;/option&gt; &lt;option&gt;1&lt;/option&gt; &lt;option&gt;2&lt;/option&gt; &lt;option&gt;3&lt;/option&gt; &lt;/select&gt; &lt;select&gt; &lt;option&gt;--请选择日--&lt;/option&gt; &lt;option&gt;1&lt;/option&gt; &lt;option&gt;2&lt;/option&gt; &lt;option&gt;3&lt;/option&gt; &lt;/select&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第三行 --&gt; &lt;tr&gt; &lt;td&gt;所在地区 &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;text&quot; value=&quot;北京&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第四行 --&gt; &lt;tr&gt; &lt;td&gt; 婚姻状况 &lt;/td&gt; &lt;td&gt; 未婚&lt;input type=&quot;radio&quot; name=&quot;marrige&quot; checked=&quot;checked&quot;&gt; 已婚&lt;input type=&quot;radio&quot; name=&quot;marrige&quot;&gt; 离异&lt;input type=&quot;radio&quot; name=&quot;marrige&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第五行 --&gt; &lt;tr&gt; &lt;td&gt;学历 &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;text&quot; value=&quot;幼儿园&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第六行 --&gt; &lt;tr&gt; &lt;td&gt;喜欢的类型 &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;checkbox&quot; name=&quot;love&quot;&gt;妩媚的 &lt;input type=&quot;checkbox&quot; name=&quot;love&quot;&gt;可爱的 &lt;input type=&quot;checkbox&quot; name=&quot;love&quot;&gt;小鲜肉 &lt;input type=&quot;checkbox&quot; name=&quot;love&quot;&gt;老腊肉 &lt;input type=&quot;checkbox&quot; name=&quot;love&quot; checked=&quot;checked&quot;&gt;都喜欢 &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第七行 --&gt; &lt;tr&gt; &lt;td&gt;自我介绍 &lt;/td&gt; &lt;td&gt; &lt;textarea&gt;个人简介&lt;/textarea&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第八行 --&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;submit&quot; value=&quot;免费注册&quot;&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第九行 --&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;input type=&quot;checkbox&quot; name=&quot;tongyi&quot; checked=&quot;checked&quot;&gt; 我同意注册条款和会员加入标准 &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第十行 --&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;a href=&quot;http://www.qq.com&quot; target=&quot;_blank&quot;&gt;我是会员，立即登录&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;!-- 第十一行 --&gt; &lt;tr&gt; &lt;td&gt; &lt;/td&gt; &lt;td&gt; &lt;h3&gt;我承诺&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;我年满18岁&lt;/li&gt; &lt;li&gt;抱着严肃的态度&lt;/li&gt; &lt;li&gt;真诚寻找另一边&lt;/li&gt; &lt;/ul&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/body&gt;} 青春不常在抓紧谈恋爱 性别 男 女 生日 –请选择年份– 1997 2001 2002 2003 –请选择月份– 1 2 3 11 –请选择日– 1 2 3 7 所在地区 婚姻状况 未婚 已婚 离异 学历 喜欢的类型 妩媚的 可爱的 小鲜肉 老腊肉 都喜欢 自我介绍 个人简介 我同意注册条款和会员加入标准 我是会员，立即登录 我承诺 我年满18岁 抱着严肃的态度 真诚寻找另一边 "],["css基础.html", "5 CSS基础 5.1 CSS简介 5.2 CSS语法规范 5.3 代码风格", " 5 CSS基础 5.1 CSS简介 CSS的主要使用场景就是美化网页,布局页面的。 HTML的局限性 CSS-网页的美容师 5.1.1 HTML的局限性 说起HTML，这其实是个非常单纯的家伙，他只关注内容的语义。比如&lt;h1&gt;表明这是一个大标题，&lt;p&gt;表明这是一个段落，&lt;img&gt;表明这儿有一个图片，&lt;a&gt;表示此处有链接。 很早的时候，世界上的网站虽然很多，但是他们都有一个共同的特点∶丑。虽然HTML可以做简单的样式，但是带来的是无尽的臃肿和繁琐……. 5.1.2 CSS-网页的美容师 CSS是层叠样式表(Cascading Style Sheets )的简称.有时我们也会称之为CSS样式表或级联样式表。PS：Cascade是瀑布的意思，瀑布看起来是一层一层的水流。 CSS是也是一种标记语言。 CSS主要用于设置HTML页面中的文本内容(字体、大小、对齐方式等)、图片的外形(宽高、边框样式、边距等）以及版面的布局和外观显示样式。 CSS让我们的网页更加丰富多彩，布局更加灵活自如。简单理解:CSS可以美化HTML,让HTML更漂亮，让页面布局更简单。 总结: HTML主要做结构,显示元素内容. CSS美化 HTML,布局网页. CSS最大价值:由HTML专注去做结构呈现，样式交给CSS，即结构(HTML）与样式(CSS）相分离。 5.2 CSS语法规范 使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则。 CSS规则由两个主要的部分构成:选择器以及一条或多条声明。选择器：给谁改样式。 声明：改成什么样式（文字颜色、文字大小等）。 图3.1: CSS组成 CSS常写在&lt;head&gt;标签之内。 选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式 属性和属性值以“键值对”的形式出现 属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等 属性和属性值之间用英文“:”分开 多个“键值对”（属性-属性值 被称为键值对）之间用英文“;”进行区分 例子： &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;体验CSS语法规范&lt;/title&gt; &lt;style&gt; /* 选择器 {样式} */ /* 给谁改样式 {改成什么样式} */ p { color: red; /* 修改文字大小为12像素 */ font-size: 12px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;有点意思&lt;/p&gt; &lt;/body&gt; 图1.1: 效果 5.3 代码风格 以下代码书写风格不是强制规范,而是符合实际开发书写方式. 5.3.1 样式格式书写 紧凑格式 h3 { color: deeppink; font-size: 20px; } 展开格式 h3 { color: pink; font-size: 20px; } 强烈推荐第二种格式，因为更直观。写完之后可以使用代码压缩成一行。 5.3.2 样式大小写 h3 { color: pink; } H3 { COLOR: PINK; } 强烈推荐样式选择器，属性名，属性值关键字全部使用小写字母，特殊情况除外。 5.3.3 空格规范 h3 { color: pink; } 属性值前面，冒号后面，保留一个空格 选择器（标签）和大括号中间保留空格 "],["css基础选择器.html", "6 CSS基础选择器 6.1 CSS选择器的作用 6.2 选择器的分类 6.3 标签选择器 6.4 类选择器 6.5 id选择器 6.6 通配符选择器 6.7 基础选择器总结 6.8 综合案例", " 6 CSS基础选择器 6.1 CSS选择器的作用 &lt;div&gt;我是div&lt;/div&gt; &lt;div&gt;我是div&lt;/div&gt; &lt;p&gt;我是段落&lt;/p&gt; &lt;ul&gt; &lt;li&gt;我是ul里面小li哦&lt;/li&gt; &lt;/u&gt; &lt;ol&gt; &lt;li&gt;我是ol里面小li哦&lt;/li&gt; &lt;/ol&gt; 1．我想把div里面的文字改为红色? 2．我想把第一个div里面的文字改为红色? 3．我想把ul里面的li文字改为红色? 选择器(选择符)就是根据不同需求把不同的标签选出来这就是选择器的作用。简单来说，就是选择标签用的。 图6.1: 选择器 以上CSS做了两件事: 1.找到所有的h1标签。选择器（选对人)。 2.设置这些标签的样式，比如颜色为红色（做对事)。 6.2 选择器的分类 选择器分为基础选择器和复合选择器两个大类，我们这里先讲解一下基础选择器。 基础选择器是由单个选择器组成的。 基础选择器又包括︰标签选择器、类选择器、id选择器和通配符选择器 6.3 标签选择器 标签选择器（元素选择器）是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一大类标签指定统一的CSS样式。 语法 标签名{ 属性1: 属性值1; 属性2: 属性值2; 属性3: 属性值3; } 例子 &lt;head&gt; &lt;style&gt; /* 标签选择器：写上标签名 */ p{ color: green; } div { color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;男生&lt;/p&gt; &lt;p&gt;男生&lt;/p&gt; &lt;p&gt;男生&lt;/p&gt; &lt;div&gt;女生&lt;/div&gt; &lt;div&gt;女生&lt;/div&gt; &lt;div&gt;女生&lt;/div&gt; &lt;/body&gt; 图2.1: 效果 作用 标签选择器可以把某一类标签全部选择出来，比如所有的&lt;div&gt;标签和所有的&lt;span&gt;标签。 优点 能快速为页面中同类型的标签统一设置样式。 缺点 不能设计差异化样式，只能选择全部的当前标签。 6.4 类选择器 如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器. 语法 .类名 { 属性1: 属性值1; } 例子 将所有拥有red类的HTML元素均为红色。 .red { color: red; } 结构需要用class属性来调用class类的意思 &lt;div class= &#39;red&#39;&gt;变红色&lt;/div&gt; 口诀 类选择器口诀：样式点定义 结构类调用 一个或多个 开发最常用 &lt;head&gt; &lt;style&gt; /* 类选择器口诀：样式点定义 结构类调用 一个或多个 开发最常用 */ .red { color: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ul&gt; &lt;li class=&quot;red&quot;&gt;冰雨&lt;/li&gt; &lt;li class=&quot;red&quot;&gt;来生缘&lt;/li&gt; &lt;li&gt;李香兰&lt;/li&gt; &lt;li&gt;生僻字&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;red&quot;&gt;我也想变红色&lt;/div&gt; &lt;/body&gt; 上面代码效果如下 /* 类选择器口诀：样式点定义 结构类调用 一个或多个 开发最常用 */ .red { color: red; } 冰雨 来生缘 李香兰 生僻字 我也想变红色 注意 1.类选择器使用“”（英文点号)进行标识，后面紧跟类名(自定义，我们自己命名的)。 2.可以理解为给这个标签起了一个名字，来表示。 3.长名称或词组可以使用中横线来为选择器命名。 4.不要使用纯数字、中文等命名，尽量使用英文字母来表示。 5.命名要有意义，尽量使别人一眼就知道这个类名的目的。 6.命名规范:见附件( Web前端开发规范手册.doc ) 6.5 id选择器 id选择器可以为标有特定id的HTML元素指定特定的样式。 HTML元素以id属性来设置id选择器，CSS中 id选择器以“#”来定义。语法 #id名{ 属性1:属性值1; } 例如，将id为nav元素中的内容设置为红色。 #nav { color :red; } 口诀 样式#定义，结构id调用，只能调用依从，别人切勿使用 id选择器和类选择器的区别 1.类选择器( class )好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。 2.id选择器好比人的身份证号码，全中国是唯一的，不得重复。 3.id选择器和类选择器最大的不同在于使用次数上。 4.类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，经常和JavaScript 搭配使用。 &lt;head&gt; &lt;style&gt; #pink { color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;pink&quot;&gt;迈克尔.杰克逊&lt;/div&gt; &lt;/body&gt; #pink { color: pink; } 迈克尔.杰克逊 6.6 通配符选择器 在CSS中，通配符选择器使用“*”定义，它表示选取页面中所有元素(标签)。 语法 * { 属性1: 属性值1; } 注意 通配符选择器不需要调用，自动就给所有的元素使用样式 特殊情况才使用，后面讲解使用场景（以下是清除所有的元素标签的内外边距后期讲） * { margin: 0; padding: 0; } 例子 &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; * { color: red; } /* *把 html body div span li标签都改成了红色 */ &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;我的&lt;/div&gt; &lt;span&gt;我的&lt;/span&gt; &lt;ul&gt; &lt;li&gt;还是我的&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; &lt;/html&gt; 6.7 基础选择器总结 表6.1: 文本格式化标签 基础选择器 作用 特点 使用情况 用法 标签选择权 可以选出所有相同的标签，比如p 不能差异化选择 较多 p {color: red;} 类选择器 可以选出1个或多个标签 可以根据需求选择 非常多 .nav {color: red;} id选择器 一次只能选择1个标签 ID属性只能在每个HTML文档中出现一次 一般和js搭配 #nav {color: red;} 通配符选择器 选择所有标签 选择的太多，有部分不需要 特殊情况使用 * {color: red;} 6.8 综合案例 6.8.1 用类选择器话盒子 通过这个案例练习两个地方: 1．类选择器的使用 2．div就是一个盒子,用来装网页内容的。 &lt;head&gt; &lt;style&gt; .red{ width: 100px; height: 100px; /* 背景颜色 */ background-color: red ; } .green{ width: 100px; height: 100px; /* 背景颜色 */ background-color: green ; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;red&quot;&gt;红色&lt;/div&gt; &lt;div class=&quot;green&quot;&gt;绿色&lt;/div&gt; &lt;div class=&quot;red&quot;&gt;绿色&lt;/div&gt; &lt;/body&gt; 上述代码效果如下 图4.2: 效果 "],["字体属性.html", "7 字体属性 7.1 字体系列 7.2 字体大小 7.3 字体粗细 7.4 文字样式 7.5 字体复合属性", " 7 字体属性 CSS使用font（字体）属性用于定义字体系列、大小、粗细和文字样式（如斜体）。 7.1 字体系列 CSS使用font-family属性定义文本的字体系列。 p { font-family: &quot;微软雅黑&quot; } div {fent-family: Arial, &quot;Microsoft Yahei&quot;, &quot;微软雅黑&quot;} 例子 &lt;head&gt; &lt;style&gt; h2 { font-family: &#39;微软雅黑&#39;; } p { /* font-family: &#39;Microsoft YaHei&#39;, Arial, Helvetica, sans-serif; */ font-family: &#39;Times New Roman&#39;, Times, serif; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;pink的秘密&lt;/h2&gt; &lt;p&gt;那一抹众人中最漂亮的颜色,&lt;/p&gt; &lt;p&gt;优雅,淡然,又那么心中清澈.&lt;/p&gt; &lt;p&gt;前端总是伴随着困难和犯错,&lt;/p&gt; &lt;p&gt;静心,坦然,攻克一个又一个.&lt;/p&gt; &lt;p&gt;拼死也要克服它,&lt;/p&gt; &lt;p&gt;这是pink的秘密也是老师最终的嘱托.&lt;/p&gt; &lt;/body&gt; 注意 各种字体之间必须使用英文状态下的逗号隔开 一般情况下,如果有空格隔开的多个单词组成的字体,加引号. 尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示 最常见的几个字体: body {font-family. 'Microsoft YaHei, tahoma,arial,Hiragino Sans GB'; } 把字体放在body标签里面，会统一body中所有字体。多放几中字体，如果第一个渲染不出来，会依次渲染后面几种字体。 Chrome浏览器默认显示微软雅黑（Microsoft YaHei）字体。 7.2 字体大小 css使用font-size属性定义字体大小。 p { font-size: 20px; } px(像素)大小是我们网页的最常用的单位 谷歌浏览器默认的文字大小为16px 不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小 -可以给body指定整个页面文字的大小 例子 &lt;head&gt; &lt;style&gt; body { font-size: 16px; } /* 标题标签需要单独指定文字大小 */ h2 { font-size: 16px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;pink的秘密&lt;/h2&gt; &lt;p&gt;那一抹众人中最漂亮的颜色,&lt;/p&gt; &lt;p&gt;优雅,淡然,又那么心中清澈.&lt;/p&gt; &lt;p&gt;前端总是伴随着困难和犯错,&lt;/p&gt; &lt;p&gt;静心,坦然,攻克一个又一个.&lt;/p&gt; &lt;p&gt;拼死也要克服它,&lt;/p&gt; &lt;p&gt;这是pink的秘密也是老师最终的嘱托.&lt;/p&gt; &lt;/body&gt; 7.3 字体粗细 CSS使用font-weight属性设置文字字体的粗细 p { font-weigth: bold; } 表4.1: 字体粗细 属性值 描述 nomal 默认值（不加粗） blod 粗体 100-900 400=normal，700=bold 学会让加粗标签（比如h和strong等)不加粗，或者其他标签加粗 实际开发时，我们更喜欢用数字表示粗细 例子 设置h2（标题2）不加粗，最后一段加粗。 &lt;head&gt; &lt;style&gt; .bold { /* font-weight: bold; */ /* 这个700 的后面不要跟单位 等价于 bold 都是加粗的效果 */ /* 实际开发中,我们跟提倡使用数字 表示加粗或者变细 */ font-weight: 700; } h2 { font-weight: 400; /* font-weight: normal; */ } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h2&gt;pink的秘密&lt;/h2&gt; &lt;p&gt;那一抹众人中最漂亮的颜色,&lt;/p&gt; &lt;p&gt;优雅,淡然,又那么心中清澈.&lt;/p&gt; &lt;p&gt;前端总是伴随着困难和犯错,&lt;/p&gt; &lt;p&gt;静心,坦然,攻克一个又一个.&lt;/p&gt; &lt;p class=&quot;bold&quot;&gt;拼死也要克服它,&lt;/p&gt; &lt;p&gt;这是pink的秘密也是老师最终的嘱托.&lt;/p&gt; &lt;/body&gt; 7.4 文字样式 CSS使用font-style属性设置文本风格 p { font-style: normal; } 表4.2: 文字样式 属性值 描述 nomal 默认值 italic 意大利斜体 注意 平时我们很少给文字加斜体，反而要给斜体标签( em , i)改为不倾斜字体。 例子 让段落变斜体， 斜体的文字不倾斜。 &lt;head&gt; &lt;style&gt; p { font-style: italic; } em { /* 让倾斜的字体不倾斜 就是赶紧脉动回来 */ font-style: normal; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;同学,上课时候的你&lt;/p&gt; &lt;em&gt;下课时候的你&lt;/em&gt; &lt;/body&gt; &lt;/html&gt; 7.5 字体复合属性 字体属性可以把以上文字样式综合来写,这样可以更节约代码: body { font: font-style font-weight font-size/line-height font-family; } 使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性间以空格隔开 不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font 属性将不起作用 &lt;head&gt; &lt;style&gt; /* 想要div文字变倾斜 加粗 字号设置为16像素 并且 是微软雅黑 */ div { /* font-style: italic; font-weight: 700; font-size: 16px; font-family: &#39;Microsoft yahei&#39;; */ /* 复合属性: 简写的方式 节约代码 */ /* font: font-style font-weight font-size/line-height font-family; */ /* font: italic 700 16px &#39;Microsoft yahei&#39;; */ font: 20px &#39;黑体&#39;; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;三生三世十里桃花,一心一意百行代码&lt;/div&gt; &lt;/body&gt; 表4.5: 字体小结 属性值 表示 注意点 font-size 字号 我们通常用的单位是px像素，一定要跟上单位 font-family 字体 实际工作中按照团队约定来写字体 font-weight 字体粗细 记住加粗是700或者bold 不加粗是normal或者400记住数字不要跟单位 font-style 字体样式 记住倾斜是italic不倾斜是normal 工作中我们最常用normal font 字体连写 字体连写是有顺序的不能随意换位置。其中字号和字体必须同时出现 "],["文本属性.html", "8 文本属性 8.1 文本颜色 8.2 对齐文本 8.3 装饰文本 8.4 文本缩进 8.5 行间距 8.6 文本属性总结", " 8 文本属性 CSS使用text（文本）属性用于定义文本的外观，比如文本颜色、文本对齐、装饰文本（下划线）、文本缩进、堕落行间距。 8.1 文本颜色 coclor属性用于定义文本的颜色。 语法 div { color: red; } 表1.2: 文本颜色 颜色属性 属性值 预定义颜色值 red、green，blue，pink 十六进制 #FF0000、#FF6600 RGB代码 rgb(255,0,0)，rgb(100%,0%,0%) 例子 &lt;head&gt; &lt;style&gt; div { /* color: pink; */ /* color: #ff00c8; */ color: rgb(255, 0, 0); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;喜欢pink色的男生&lt;/div&gt; &lt;/body&gt; 注意 开发中最常使用的十六进制的颜色。 8.2 对齐文本 text-align属性用于设置元素内文本内容的水平对齐方式（左、右、居中对其），无法实现垂直对齐。 语法 div { text-align: center; } 表8.1: 文本对齐 属性值 解释 left 左对齐（默认值） right #右对齐 center 居中对其 例子 &lt;head&gt; &lt;style&gt; h1 { /* 本质是让h1盒子里面的文字水平居中对齐 */ /* text-align: right; */ text-align: center; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;居中对其的标题&lt;/h1&gt; &lt;/body&gt; 8.3 装饰文本 text-decoration属性规定添加到文本的修饰，可以给文本添加下划线、删除线、上划线等。 表8.2: 装饰文本 属性值 解释 none 默认，没有装饰线（最常用） underline 下划线。链接a自带下划线（常用） overline 上划线（几乎不用） line-trrough 删除线（不常用） 例子 添加下划线，以及链接取消下划线。 &lt;head&gt; div { /* text-decoration: underline; */ /* text-decoration: line-through; */ text-decoration: overline; } a { text-decoration: none; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;粉红色的回忆&lt;/div&gt; &lt;a href=&quot;#&quot;&gt;粉红色的回忆&lt;/a&gt; &lt;/body&gt; 8.4 文本缩进 text-indent属性用来指定文本第一行的缩进，通常是将段落首行缩进。 语法 div { text-indent: 10px; } 通过设置该属性，所有元素的第一行都可以缩进一个给定的长度，这个长度甚至可以是负的。 div { text-indent: 2em; } em是一个相对单位，就是当前元素(font-size)1个文字的大小，如果当前元素没有设置大小，则会按照父元素的1个文字大小。 例子 &lt;head&gt; &lt;style&gt; /* 文本第一行缩进2字符 */ p { text-indent: 2em; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;打开北京、上海与广州的地铁地图，你会看见三张纵横交错的线路网络，这代表了中国最成熟的三套城市轨道交通系统。&lt;/p&gt; &lt;p&gt; 可即使这样，在北上广生活的人依然少不了对地铁的抱怨，其中谈及最多的问题便是拥挤——对很多人而言，每次挤地铁的过程，都像是一场硬仗。更何况，还都是败仗居多。&lt;/p&gt; &lt;p&gt; 那么，当越来越多的二线甚至三线城市迎接来了自己的地铁，中国哪里的地铁是最拥挤的呢？&lt;/p&gt; &lt;/body&gt; 8.5 行间距 line-height属性用于设置行间的距离（行高），可以控制文字行与行之间的距离。 语法 p { line-height: 26px; } 文字的行高等于盒子的高度。行高 = 上距离 + 内容高度 + 下距离 上距离和下距离总是相等的，因此文字看上去是垂直居中的。 图8.1: 行间距示意图 例子 设置行高为26像素，因为文字高度默认是16像素，所以上下间距均为5像素。 &lt;head&gt; &lt;style&gt; /* 文本第一行缩进2字符 */ div { line-height: 26px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;中国人&lt;/div&gt; &lt;/body&gt; 8.6 文本属性总结 表8.3: 文本属性总结 属性 表示 注意点 color 文本颜色 我们通常用十六进制比如而且是简写形式#fff text-align 文本对齐 可以设定文字水平的对齐方式 text-indent 文本缩进 通常我们用于段落首行缩进2个字的距离text-indent: 2em; text-decoration 文本装饰 记住添加下划线underline取消下划线none text-height 行高 控制行与行之间的距离 "],["css引入方式.html", "9 CSS引入方式 9.1 CSS的三种样式表 9.2 行内样式表 9.3 外部样式 9.4 CSS引入方式总结 9.5 综合案例", " 9 CSS引入方式 CSS使用font（字体）属性用于定义字体系列、大小、粗细和文字样式（如斜体）。 9.1 CSS的三种样式表 按照CSS样式书写的位置（或者引入的方式)，CSS样式表可以分为三大类: 1．行内样式表(行内式) 2．内部样式表(嵌入式) 3．外部样式表（链接式) ##内部样式表 内部样式表（内嵌样式表）是写到html页面内部.是将所有的CSS代码抽取出来，单独放到一个&lt;style&gt;标签中。 &lt;style&gt; div { color: red; font-size: 12px; &lt;lstyle&gt; &lt;style&gt;标签理论上可以放在HTML文档的任何地方，但一般会放在文档的&lt;head&gt;标签中 通过此种方式，可以方便空制当前整个页面中的元素样式设置 代码结构清晰，但是并没有实现结构与样式完全分离 使用内部样式表设定CSS，通常也被称为嵌入式引入，这种方式是我们练习时常用的方式 9.2 行内样式表 行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式。适合于修改简单样式. &lt;div style=&quot;color: red; font-size: 12px; &quot;&gt;青春不常在，抓紧谈恋爱&lt;/div&gt; style其实就是标签的属性 在双引号中间，写法要符合CSS规范 可以控制当前的标签设置样式 由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用。只有对当前元素添加简单样式的时候，可以考虑使用 使用行内样式表设定CSS，通常也被称为行内式引入。 例子 &lt;body&gt; &lt;p&gt;夏天夏天悄悄过去留下小秘密&lt;/p&gt; &lt;p&gt;压心底压心底不能告诉你&lt;/p&gt; &lt;p&gt; 晚风吹过温暖我心底我又想起你&lt;/p&gt; &lt;p&gt; 多甜蜜多甜蜜怎能忘记&lt;/p&gt; &lt;p&gt;不能忘记你把你写在日记里&lt;/p&gt; &lt;p&gt;不能忘记你心里想的还是你&lt;/p&gt; &lt;p style=&quot;color: pink;&quot;&gt;浪漫的夏季还有浪漫的一个你&lt;/p&gt; &lt;/body&gt; 9.3 外部样式 实际开发都是外部样式表.适合于样式比较多的情况.核心是:样式单独写到CSS文件中，之后把CSS文件引入到 HTML页面中使用。 引入外部样式表分为两步: 新建一个后缀名为.css的样式文件，把所有CSS代码都放入此文件中。 在HTML页面中，使用&lt;link&gt;标签引入这个文件。 &lt;link rel=&quot;stylesheet&quot; href=&quot;css文件路径&quot;&gt; 例子 &lt;head&gt; &lt;!-- style.css是外部CSS文件，并使用相对路径引用 --&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;来呀快活呀&lt;/div&gt; &lt;/body&gt; 9.4 CSS引入方式总结 表4.1: CSS引入方式总结 样式表 优点 缺点 使用情况 控制范围 行内样式表 书写方便，权重高 结构样式混写 较少 控制一个标签 内部样式表 部分结构和样式相分离 没有彻底分离 较多 控制一个页面 外部样式表 完全实现结构和样式相分离 需要引入 最多，推荐！ 控制多个页面 9.5 综合案例 新闻页面 制作业面整体可分为 搭建html结构页面 修改CSS样式 &lt;head&gt; &lt;style&gt; /* body标签下 字体大小16像素/行高28像素 字体微软雅黑 */ body { font: 16px/28px &#39;Microsoft YaHei&#39;; } h1 { /* 文字不加粗 */ font-weight: 400; /* 水平居中对齐 */ text-align: center; } .gray { color: #888888; font-size: 12px; text-align: center ; } .search { color: #666666; width: 170px; } .btn { font-weight: 700; } a { /* 取消下划线 */ text-decoration: none; } p { /* 首行缩进两个字符 */ text-indent: 2em; } .pic { /* 想要图片居中对齐，则让它的父亲p标签居中对其 */ text-align: center; } .footer { color: #888888; font-size: 12px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;北方高温明日达鼎盛 京津冀多地地表温度将超60℃&lt;/h1&gt; &lt;div class=&quot;gray&quot;&gt;2019-07-03 16:31:47 来源:&lt;a href=&quot;#&quot;&gt;中国天气网&lt;/a&gt; &lt;input type=&quot;text&quot; value=&quot;请输入查询条件&quot; class=&quot;search&quot;&gt; &lt;button class=&quot;btn&quot;&gt;搜索&lt;/button&gt; &lt;/div&gt; &lt;hr&gt; &lt;p&gt;中国天气网讯 今天（3日），华北、黄淮多地出现高温天气，截至下午2点，北京、天津、郑州等地气温突破35℃。预报显示，今后三天（3-5日），这一带的高温天气将继续发酵，高温范围以及强度将在4日达到鼎盛，预计北京、天津、石家庄、济南等地明天的最高气温有望突破38℃，其中北京和石家庄的最高气温还有望创今年以来的新高。&lt;/p&gt; &lt;h4&gt;气温41.4℃！地温66.5！北京强势迎七月首个高温日。&lt;/h4&gt; &lt;p class=&quot;pic&quot;&gt; &lt;img src=&quot;../图片/CSS/pic.jpeg&quot;&gt; &lt;/p&gt; &lt;p&gt;今天，华北、黄淮一带的高温持续发酵，截至今天下午2点，陕西北部、山西西南部、河北南部、北京、天津、山东西部、河南北部最高气温已普遍超过35℃。大城市中，北京、天津、郑州均迎来高温日&lt;/p&gt; &lt;p&gt;在阳光暴晒下，地表温度也逐渐走高。今天下午2点，华北黄淮大部地区的地表温度都在50℃以上，部分地区地表温度甚至超过60℃。其中河北衡水地表温度高达68.3℃,天津站和北京站附近的地表温度分别高达66.6℃和66.5℃。&lt;/p&gt; &lt;h4&gt;明日热度再升级!京津冀携手冲击38℃+ 。&lt;/h4&gt; &lt;p&gt;中国天气网气象分析师王伟跃介绍,明天(4日),华北,黄淮地区35℃以上的高温天气还将继续升级,并进入鼎盛阶段,高温强度和范围都将发展到最强。 (文/张慧 数据支持/王伟跃 胡啸 审核/刘文静 张方丽)&lt;/p&gt; &lt;p class=&quot;footer&quot;&gt;本文来源:中国天气网 责任编辑:刘京_NO5631&lt;/p&gt; &lt;/body&gt; .title { /* 文字不加粗 */ font-weight: 400; /* 水平居中对齐 */ text-align: center; } .gray { color: #888888; font-size: 12px; text-align: center ; } .search { color: #666666; width: 170px; } .btn { font-weight: 700; } .nounderline { /* 取消下划线 */ text-decoration: none; } .indent { /* 首行缩进两个字符 */ text-indent: 2em; } .pic { /* 想要图片居中对齐，则让它的父亲p标签居中对其 */ text-align: center; } .footer { color: #888888; font-size: 12px; } 北方高温明日达鼎盛 京津冀多地地表温度将超60℃ 2019-07-03 16:31:47 来源:中国天气网 搜索 中国天气网讯 今天（3日），华北、黄淮多地出现高温天气，截至下午2点，北京、天津、郑州等地气温突破35℃。预报显示，今后三天（3-5日），这一带的高温天气将继续发酵，高温范围以及强度将在4日达到鼎盛，预计北京、天津、石家庄、济南等地明天的最高气温有望突破38℃，其中北京和石家庄的最高气温还有望创今年以来的新高。 气温41.4℃！地温66.5！北京强势迎七月首个高温日。 今天，华北、黄淮一带的高温持续发酵，截至今天下午2点，陕西北部、山西西南部、河北南部、北京、天津、山东西部、河南北部最高气温已普遍超过35℃。大城市中，北京、天津、郑州均迎来高温日 在阳光暴晒下，地表温度也逐渐走高。今天下午2点，华北黄淮大部地区的地表温度都在50℃以上，部分地区地表温度甚至超过60℃。其中河北衡水地表温度高达68.3℃,天津站和北京站附近的地表温度分别高达66.6℃和66.5℃。 明日热度再升级!京津冀携手冲击38℃+ 。 中国天气网气象分析师王伟跃介绍,明天(4日),华北,黄淮地区35℃以上的高温天气还将继续升级,并进入鼎盛阶段,高温强度和范围都将发展到最强。 (文/张慧 数据支持/王伟跃 胡啸 审核/刘文静 张方丽) 本文来源:中国天气网 责任编辑:刘京_NO5631 "],["复合选择器.html", "10 复合选择器 10.1 复合选择器的定义 10.2 后代选择器 10.3 子选择器 10.4 并集选择器 10.5 伪类选择器 10.6 复合选择器总结 10.7 课堂练习", " 10 复合选择器 10.1 复合选择器的定义 在CSS中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成的。 复合选择器可以更准确、更高效的选择目标元素(标签) 复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的 常用的复合选择器包括∶后代选择器、子选择器、并集选择器、伪类选择器等等 10.2 后代选择器 后代选择器又称为包含选择器，可以选择父元素里面子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。 语法 元素1 元素2 {样式声明} 上述语法表示选择元素1里面的所有元素2(后代元素)。例如∶ ul li { 样式声明} /*选择ul里面所有的li标签元素 元素1和元素2中间用空格隔开 元素1是父级，元素2是子级，最终选择的是元素2 元素2可以是儿子，也可以是孙了等，只要是元素1的后代即可 元素1和元素2可以是任意基础选择器，如标签选择器，类选择器，ID选择器 例子 &lt;head&gt; &lt;style&gt; ol li { /* 我只选择ol中的li标签 */ color: pink; } ol li a { color: red; } .navy li a { color: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ol&gt; &lt;li&gt;我是ol 的孩子&lt;/li&gt; &lt;li&gt;我是ol 的孩子&lt;/li&gt; &lt;li&gt;我是ol 的孩子&lt;/li&gt; &lt;li&gt;我是ol 的孩子&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;我是li 的孙子&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;ul&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;不会变化 &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;ul class=&quot;navy&quot;&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;我是ul 的孩子&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;不会变化 &lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;不会变化 &lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;不会变化 &lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 10.3 子选择器 子元素选择器（子选择器）只能选择作为某元素的最近一级子元素。简单理解就是选亲儿子元素. 语法 元素1&gt;元素2{样式声明} 上述语法表示选择元素1里面的所有直接后代(子元素)元素2。例如∶ div &gt; p {样式声明}/*选择div里面所有最近一级p标签元素*/ 元素1和元素2中间用大于号隔开 元素1是父级，元素2是子级，最终选择的是元素2 元素2必须是亲儿子，其孙子、重孙之类都不归他管.你也可以叫他亲儿子选择器 &lt;head&gt; &lt;style&gt; .nav&gt;a { color: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;a href=&quot;#&quot;&gt; 我是儿子 &lt;/a&gt; &lt;p&gt; &lt;a href=&quot;#&quot;&gt; 我是孙子 &lt;/a&gt; &lt;/p&gt; &lt;/div&gt; &lt;/body&gt; 10.4 并集选择器 并集选择器可以选择多组标签,同时为他们定义相同的样式。通常用于集体声明. 并集选择器是各选择器通过英文逗号(，)连接而成，任何形式的选择器都可以作为并集选择器的一部分。语法︰ 元素1,元素2 {样式声明} 上述语法表示选择元素1和元素2。例如︰ ul, div {样式声明} /* 选择ul和div标签元素*/ 元素1和元素2中间用逗号隔开 逗号可以理解为和的意思 并集选择器通常用于集体声明 约定的语法规范，并集选择器喜欢竖着写 最后一个选择器不加逗号 例子 要求：熊大熊二改为粉色 小猪一家改为粉色。 &lt;head&gt; &lt;style&gt; div, p, .pig li { color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;熊大&lt;/div&gt; &lt;P&gt;熊二&lt;/P&gt; &lt;span&gt;光头强&lt;/span&gt; &lt;ul class=&quot;pig&quot;&gt; &lt;li&gt;小猪佩奇&lt;/li&gt; &lt;li&gt;小猪爸爸&lt;/li&gt; &lt;li&gt;猪妈妈&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 10.5 伪类选择器 伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第1个，第n个元素。 伪类选择器书写最大的特点是用冒号( :)表示，比如:hover . :first-child。 因为伪类选择器很多，比如有链接伪类、结构伪类等，所以这里先给大家讲解常用的链接伪类选择器。 10.5.1 链接伪类 语法 a : link /*选择所有未被访问的链接*/ a : visited /*选择所有已被访问的链接*/ a : hover /*选择鼠标指针位于其上的链接*/ a : active /* 选择活动链接（鼠标按下未弹起的链接） */ 例子 &lt;head&gt; &lt;style&gt; /* 未访问过的链接 a:link 把没有点击过的链接选出来*/ a:link { color: #333; text-decoration: none; } /* a: visited 选择访问过的链接 */ a:visited { color: orange; } /* a: hovor 选择鼠标经过的链接 */ a:hover { color: skyblue; } /* a:active 选择鼠标正在按下，还没有正在弹起的链接 */ a:active { color: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;#&quot;&gt;小猪佩奇&lt;/a&gt; &lt;/body&gt; 注意事项 为了确保生效，请按照LVHA的循顺序声明:link - :visited - :hover - :active。 记忆法:love hate。 因为a链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式。 实际开发中最常见的写法 /* a是标签选择器瞭所有的链接*/ a { color: gray; } / * :hover是链接伪类选择器鼠标经过*/ a : hover { color: red; /*鼠标经过的时候，由原来的灰色变成了红色*/} } &lt;head&gt; &lt;style&gt; a { color: #333; text-decoration: none; } a:hover { color: #369; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;#&quot;&gt;小猪佩奇&lt;/a&gt; &lt;a href=&quot;http://www.xxxxxx.com&quot;&gt;未知的网站&lt;/a&gt; &lt;/body&gt; 10.5.2 :focus伪类选择器 :focus 伪类选择器用于选取获得焦点的表单元素。 焦点就是光标，一般情况&lt;input&gt;类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。 input :focus { background-color: yellow ; } 例子 &lt;head&gt; &lt;style&gt; /* 把光标的input表单元素选出来 */ input:focus { background-color: pink; color: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;text&quot;&gt; &lt;input type=&quot;text&quot;&gt; &lt;input type=&quot;text&quot;&gt; &lt;/body&gt; /* 把光标的input表单元素选出来 */ input:focus { background-color: pink; color: red; } 10.6 复合选择器总结 表6.1: 复合选择器总结 选择器 作用 特征 使用情况 隔开符号及用法 后代选择权 用来选择后代元素 可以是子孙后代 较多 符号是空格 .nav a 子代选择器 选择最近一级元素 只选亲儿子 较少 符号是大于 .nav&gt;p 并集选择权 选择某些相同样式的元素 可以用于集体声明 较多 符号是逗号 .nav,.header 链接选择器 选择不同状态的链接 跟链接相关 较多 重点记住a{}和a:hovor 实际开发的写法 :focus选择器 选择获得光标的表单 跟表单相关 较少 input:focus 记住这个写法 10.7 课堂练习 将下面链接文字改为红色 &lt;div class=&quot;nav&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;百度&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;百度&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;style&gt; .nav li a { color: red; } &lt;/style&gt; 将下面的大肘子文字修改为红色 &lt;div class=&quot;hot&quot;&gt; &lt;a href=&quot;#&quot;&gt;大肘子&lt;/a&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;猪头&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;猪尾巴&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;style&gt; .hot&gt;a { color: red; } &lt;/style&gt; "],["元素的显示模式.html", "11 元素的显示模式 11.1 什么是元素的显示模式 11.2 块元素 11.3 行内元素（内联元素） 11.4 行内块元素 11.5 元素显示模式总结 11.6 元素显示模式转换 11.7 案例", " 11 元素的显示模式 了解元素的显示模式可以更好的让我们布局页面 11.1 什么是元素的显示模式 元素显示模式就是元素(标签)以什么方式进行显示，比如&lt;div&gt;自己占一行，比如一行可以放多个&lt;span&gt;。 HTML元素一般分为块元素和行内元素两种类型 11.2 块元素 常见的块元素有&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等，其中&lt;div&gt;标签是最典型的块元素。 特点 比较霸道，自己独占一行。 高度，宽度、外边距以及内边距都可以控制。 宽度默认是容器（父级宽度)的100%。高度用的是自己的高度。 是一个容器及盒子，里面可以放行内或者块级元素。 注意 文字类的元素（&lt;p&gt;，&lt;h&gt;）内不能使用块级元素 &lt;p&gt;标签主要用于存放文字，因此 里面不能放块级元素，特别是不能放&lt;div&gt; 同理，&lt;h1&gt;~&lt;h6&gt;等都是文字类块级标签，里面也不能放其他块级元素 例子 &lt;head&gt; &lt;style&gt; div { /* width: 200px; */ height: 200px; background-color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;比较霸道，自己独占一行&lt;/div&gt; 瑟瑟发抖 &lt;p&gt; &lt;div&gt;这里有问题&lt;/div&gt; &lt;/p&gt; &lt;/body&gt; 11.3 行内元素（内联元素） 行内元素又称为内联元素，常见的行内元素有&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;，&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中&lt;span&gt;是最典型的行内元素。 特点 相邻行内元素在一行上，一行可以显示多个。 高、宽直接设置是无效的。 默认宽度就是它本身内容的宽度。 行内元素只能容纳文本或其他行内元素，不能放块元素。 注意 链接里面不能再放链接 特殊情况链接&lt;a&gt;里面可以放块级元素，但是需要给&lt;a&gt;转换一下模式最安全。 例子 &lt;head&gt; &lt;style&gt; span { width: 100px; height: 100px; background-color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;span&gt;pink老师你怎么这么宽&lt;/span&gt; &lt;strong&gt;喜欢粉色&lt;/strong&gt; &lt;span&gt;pink老师&lt;/span&gt; &lt;strong&gt;喜欢粉色&lt;/strong&gt; &lt;/body&gt; 11.4 行内块元素 在行内元素中有几个特殊的标签——&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;，它们同时具有块元素和行内元素的特点。有些资料称它们为行内块元素。 心 行内块元素的特点∶ 和相邻行内元素(行内块)在一行上，但是他们之间会有空白缝隙。一行可以显示多个(行内元素特点)。 默认宽度就是它本身内容的宽度(行内元素特点)。 高度，行高、外边距以及内边距都可以控制(块级元素特点)。 例子 &lt;head&gt; &lt;style&gt; input { width: 249px; height: 35px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;input type=&quot;text&quot;&gt; &lt;input type=&quot;text&quot;&gt; &lt;/body&gt; 11.5 元素显示模式总结 表2.1: 元素显示模式总结 元素模式 元素排列 设置样式 默认宽度 包含 块级元素 一行只能放一个块级元素 可以设置宽度高度 等于父级的宽度 容器级可以包含任何标签 行内元素 一行可以放多个行内元素 不可以设置宽度 它本身内容的宽度 容纳文本或其他行内元素 行内块元素 一行放多个行内块元素 可以设置宽度和高度 它本身内容的宽度 - 11.6 元素显示模式转换 特殊情况下，我们需要元素模式的转换，简单理解一个模式的元素需要另外一种模式的特性。 比如想要增加链接&lt;a&gt;的触发范围。 转换为块元素：display:block; 转换为行内元素：display:inline; 转换为行内块元素：display:inline-block; 例子 &lt;head&gt; &lt;style&gt; a { width: 200px; height: 50px; /* 行高等于盒子高度时，垂直居中 */ line-height: 40px; background-color: pink; /* 把行内元素a转换为块元素 */ display: block; } div { width: 300px; height: 100px; background-color: purple; /* 把div块级元素转换为行内元素 */ display: inline; } span { width: 300px; height: 30px; background-color: skyblue; display: inline-block; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;#&quot;&gt;行内a元素转为块元素&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;行内a元素转为块元素&lt;/a&gt; &lt;div&gt;我是块元素&lt;/div&gt; &lt;div&gt;我是块元素&lt;/div&gt; &lt;span&gt;行内元素转换为行内块元素&lt;/span&gt; &lt;span&gt;行内元素转换为行内块元素&lt;/span&gt; &lt;/body&gt; 11.7 案例 简洁版小米侧边栏 小技巧，单行文字垂直居中：让文字的行高等于盒子的高度。 简单理解:行高的上空隙和下空隙把文字挤到中间了.是如果行高小于盒子高度,文字会偏上如果行高大于盒子高度,则文字偏下 height: 40px; /* 行高等于盒子高度时，垂直居中 */ line-height: 40px; &lt;head&gt; &lt;style&gt; a { width: 230px; height: 40px; /* 行高等于盒子高度时，垂直居中 */ line-height: 40px; /* 块级元素 */ display: block; /* 文字颜色为白色 */ color: #fff; /* 背景颜色变灰色 */ background-color: #535758; /* 文字大小14px */ font-size: 14px; /* 去除连接下划线 */ text-decoration: none; /* 首行缩进 */ text-indent: 2em; } a:hover { background-color: #FE6700; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;#&quot;&gt;手机 电话卡&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;电视 盒子&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;笔记本 平板&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;出行 穿戴&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;智能 路由器&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;健康 儿童&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;耳机 音响&lt;/a&gt; &lt;/body&gt; "],["css背景.html", "12 CSS背景 12.1 背景颜色 12.2 背景图片 12.3 背景平铺 12.4 背景图片的位置 12.5 背景图像固定（背景附着） 12.6 背景属性复合写法 12.7 背景色半透明 12.8 背景总结 12.9 案例 12.10 五彩导航栏", " 12 CSS背景 通过CSS背景属性，可以给页面元素添加背景样式。 背景属性可以设置背景颜色、背景图片、背景平铺、背景图片位置、背景图像固定等。 12.1 背景颜色 background-color属性定义了元素的背景颜色。 语法 background-color:颜色值; 一般情况下元素背景颜色默认值是transparent（透明），我们也可以手动指定背景颜色为透明色。 例子 &lt;head&gt; &lt;style&gt; div { width: 200px; height: 200px; background-color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 12.2 背景图片 background-image属性描述了元素的背景图像。实际开发常见于logo或者一些装饰性的小图片或者是超大的背景图片,优点是非常便于控制位置.(精灵图也是一种运用场景) 语法 background-image: none | url(url) 表2.1: 背景图片 参数值 url none 无背景图（默认） url 使用绝对或相对地址指定背景图片 例子 &lt;head&gt; &lt;style&gt; div { width: 800px; height: 800px; background-image: url(../图片/men.jpeg); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 12.3 背景平铺 如果需要在HTML页面上对背景进行平铺，可以使用background-repeat属性 语法 background-repeat: repeat | no-repeat | repeat-x | repeat-y 表8.2: 背景平铺参数值 参数值 作用 repeat 背景图片在x轴和y平铺（默认） no-repeat 背景图片不平铺 repeat-x 背景图片在x轴方向平铺 repeat-y 背景图片在y轴方向平铺 例子 &lt;head&gt; &lt;style&gt; div { width: 800px; height: 800px; background-image: url(../图片/men.jpeg); /* 默认情况下，背景图片平铺 */ /* background-repeat: no-repeat; */ /* 背景图片不平铺 */ /* background-repeat: no-repeat; */ /* 背景图片沿着x轴平铺 */ /* background-repeat: repeat-x; */ /* 背景图片沿着y轴平铺 */ background-repeat: repeat-y; background-color: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 注意：页面元素既可以添加背景颜色，也可以添加背景图片，只不过背景图片会压住背景颜色 12.4 背景图片的位置 利用background-position属性可以改变图片在背景中的位置。 语法 background-position: x y; 表4.3: 背景图片位置 参数值 说明 length 百分数|由浮点数和单位标识符组成的长度值 position top|center|bottom|left|right 方位名词 12.4.1 参数是方位名词 例子:王者荣耀官网 如果指定的两个值都是方位名词，则两个值前后顺序无关，比如left top和top left效果一致 如果只指定了一个方位名词，另一个值省略，则第二个值默认居中对齐 例子 &lt;head&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; div { width: 800px; height: 800px; background-image: url(../图片/men.jpeg); background-repeat: no-repeat; background-color: green; /* 水平居中，垂直靠上 */ /* background-position: center top; */ /* 水平靠右，垂直居中 */ /* background-position: right center; */ /* 如果是方位名词，单次顺序可以互换： center和roght */ /* background-position: center right; */ /* 方位名词的第二个参数省略时，默认为center */ background-position: right; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 12.4.2 参数是精确单位 如果参数是精确单位，那么第一个一定是x坐标，第二个是y坐标。 如果只指定一个数值，那该数值一定是x坐标，另一个默认垂直居中。 例子 &lt;head&gt; &lt;style&gt; h3 { width: 118px; height: 40px; background-color: pink; font-size: 14px; font-weight: 400; line-height: 40px; background-image: url(../图片/title_sprite.png); background-repeat: no-repeat; /* x轴是20 y轴是50 */ background-position: 20px 50px; text-indent: 1.5em; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h3&gt;成长守护平台&lt;/h3&gt; &lt;/body&gt; 12.4.3 参数是混合单位 如果指定的两个值是精确单位和方位名词混合使用，则第一个值是x坐标，第二个值是y坐标 例子 &lt;head&gt; &lt;style&gt; h3 { width: 118px; height: 40px; background-color: pink; background-image: url(../图片/title_sprite.png); background-repeat: no-repeat; /* 混合单位 x为20 y是center */ background-position: 20px center; text-indent: 1.5em; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h3&gt;成长守护平台&lt;/h3&gt; &lt;/body&gt; 12.5 背景图像固定（背景附着） 实例：QQ官网 background-attachment属性设置背景图像是否固定或者随着页面的其余部分滚动。 background-attachment后期可以制作视差滚动的效果。 语法 background-attachment: scroll | fixed 表8.3: 背景附着 参数 作用 scroll 背景图片随对象内容滚动（默认） fixed 背景图像固定 例子 &lt;head&gt; &lt;style&gt; body { background-position: center top; background-repeat: no-repeat; background-image: url(fig/17-02.jpg); color: #fff; font-size: 20px; /* 把背景图片固定 */ background-attachment: fixed; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;/body&gt; 12.6 背景属性复合写法 为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性background中。从而节约代码量。 当使用简写属性时，没有特定的书写顺序,一般习惯约定顺序为: background:背景颜色背景图片地址背景平铺背景图像滚动背景图片位置; 例子 &lt;head&gt; &lt;style&gt; body { background: #fff url(fig/17-02.jpg) no-repeat fixed center top; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt;天王盖地虎，pink老师一米五&lt;/p&gt; &lt;/body&gt; 12.7 背景色半透明 CSS3为我们提供了背景色半透明的效果。 语法 background: rgb(0, 0, 0, 0.3); 注意 最后一个参数是alpha透明度，取值范围在0~1之间 我们习惯把0.3的0省略掉，写为background: rgba(0,0,0,.3); 注意∶背景半透明是指盒子背景半透明，盒子里面的内容不受影响CSS3新增属性，是IE9+版本浏览器才支持的 但是现在实际开发,我们不太关注兼容性写法了,可以放心使用 例子 &lt;head&gt; &lt;style&gt; div { height: 200px; width: 200px; background: rgba(0, 0, 0, 0.3); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;隐形的翅膀&lt;/div&gt; &lt;/body&gt; 12.8 背景总结 表12.1: 背景总结 属性 作用 值 background-color 背景颜色 预定义的颜色值/十六进制/RGB background-image 背景图片 url(图片路径) background-repeat 背景平铺 repeat/no-repeat/repeat-x/repeat-y background-position 背景位置 length/position x/y background-attachment 背景附着 scroll（背景滚动）/fixed（背景固定） 背景简写 书写简单 背景颜色 背景图片地址 背景平铺 背景滚动 背景位置 背景色半透明 背景色半透明 background:rgba(0,0,0,0.3) 背景图片:实际开发常见于logo或者一些装饰性的小图片或者是超大的背景图片,优点是非常便于控制位置.(精灵图也是一种运用场景) 12.9 案例 12.9.1 背景图片案例：方位名词 &lt;head&gt; &lt;style&gt; body { background-position: center top; background-repeat: no-repeat; background-image: url(fig/17-02.jpg); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; 12.10 五彩导航栏 图12.1: 五彩导航效果 练习价值: 1．链接属于行内元素,但是此时需要宽度高度,因此需要模式转换 2．里面文字需要水平居中和垂直居中.因此需要单行文字垂直居中的代码. 3．链接里面需要设置背景图片.因此需要用到背景的相关属性设置. 4．鼠标经过变化背景图片,因此需要用到链接伪类选择器. 代码 &lt;head&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; .nav a { /* 行内块元素，可以设置宽和高，又在同一行 */ display: inline-block; width: 120px; height: 58px; background-color: pink; /* 水平居中 */ text-align: center; /* 垂直居中 */ line-height: 52px; color: white; /* 取消下划线 */ text-decoration: none; } .nav .bg1 { background: url(../../html_css_material-master/第四天/images/bg1.png) no-repeat; } .nav .bg2 { background: url(../../html_css_material-master/第四天/images/bg2.png) no-repeat; } .nav .bg1:hover { background-image: url(../../html_css_material-master/第四天/images/bg11.png ); } .nav .bg2:hover { background-image: url(../../html_css_material-master/第四天/images/bg22.png ); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;bg1&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot; class=&quot;bg2&quot;&gt;五彩导航&lt;/a&gt; &lt;/div&gt; &lt;/body&gt; &lt;style&gt; .nav a { /* 行内块元素，可以设置宽和高，又在同一行 */ display: inline-block; width: 120px; height: 58px; background-color: pink; /* 水平居中 */ text-align: center; /* 垂直居中 */ line-height: 52px; color: white; /* 取消下划线 */ text-decoration: none; } .nav .bg1 { background: url(../../html_css_material-master/第四天/images/bg1.png) no-repeat; } .nav .bg2 { background: url(../../html_css_material-master/第四天/images/bg2.png) no-repeat; } .nav .bg1:hover { background-image: url(../../html_css_material-master/第四天/images/bg11.png ); } .nav .bg2:hover { background-image: url(../../html_css_material-master/第四天/images/bg22.png ); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;a href=&quot;#&quot; class=&quot;bg1&quot;&gt;五彩导航&lt;/a&gt; &lt;a href=&quot;#&quot; class=&quot;bg2&quot;&gt;五彩导航&lt;/a&gt; &lt;/div&gt; &lt;/body&gt; "],["css的三大特性.html", "13 CSS的三大特性 13.1 层叠性 13.2 继承性 13.3 优先级 13.4 综合练习", " 13 CSS的三大特性 CSS有三个非常重要的重要的特性：层叠性、继承性、优先级 13.1 层叠性 相同选择器给设置相同的样式，此时一个样式就会覆盖（层叠）另一个冲突的样式。层叠性主要解决样式突的问题 层叠性原则: 样式冲突，遵循的原则是就近原则，哪个样式离结构近，就执行哪个样式· 样式不冲突，不会层叠 图3.1: 层叠性 例子 &lt;head&gt; &lt;style&gt; div { /* color=red被覆盖 */ color: red; /* font-size没有被覆盖 */ font-size: 12px; } div { color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;长江后浪推前浪，前浪死在沙滩上&lt;/div&gt; &lt;/body&gt; 13.2 继承性 CSS中的继承:子标签会继承父标签的某些样式，如文本颜色和字号。简单的理解就是∶子承父业。 恰当地使用继承可以简化代码，降低CSS样式的复杂性 子元素可以继承父元素文字相关的样式( text-, font-, line-这些元素开头的可以继承，以及color属性) 例子 &lt;head&gt; &lt;style&gt; div { color: pink; font-size: 14px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; 子标签p 继承了父标签 div的样式 &lt;p&gt;龙生龙，凤生凤，老鼠生的孩子会打洞&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; 13.2.1 行高的继承 语法 body { font:12px/1.5 &#39;Microsoft YaHei&#39;; } 行高可以跟单位也可以不跟单位 如果子元素没有设置行高，则会继承父元素的行高为1.5.此时子元素的行高是:当前子元素的文字大小*1.5 body行高1.5这样写法最大的优势就是里面子元素可以根据自己文字大小自动调整行高 例子 &lt;head&gt; &lt;style&gt; body { color: pink; /* font: 12px/24px &#39;Microsoft YaHei&#39;; */ /* 1.5是当前文字大小的11.5倍 */ font: 12px/1.5 &#39;Microsoft YaHei &#39;; } div { /* 行高继承父标签body的=1.5*16=24px */ font-size: 14px; } p { /* 行高继承父标签body的=1.5*16=24px */ font-size: 16px; } /* li没有指定文字大小 则会继承父亲的body12px*1.5=18px */ &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;粉红色的回忆&lt;/div&gt; &lt;p&gt;粉红色的回忆&lt;/p&gt; &lt;ul&gt; &lt;li&gt;我没有制定文字大小&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 13.3 优先级 当同一个元素指定多个选择器，就会有优先级的产生。 选择器相同，则执行层叠性 选择器不同，则根据选择器权重执行 表4.1: 选择器权重 选择器 选择器权重 继承或通配符选择器 0,0,0,0 标签选择器 0,0,0,1 类选择器/伪类选择器 0,0,1,0 ID选择器 0,1,0,0 行内样式 1,0,0,0 !important 无穷大 例子 &lt;head&gt; &lt;style&gt; /* !importan权重最高 */ div { color: pink !important; } /* 类选择器权重更高，所以权重更高 */ .test { color: red; } /* ID选择器权重更高 */ #demo { color: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;test&quot; id=&quot;demo&quot; style=&quot;color: purple;&quot;&gt;你笑起来真好看&lt;/div&gt; &lt;/body&gt; 13.3.1 优先级注意 可以简单记忆法:通配符和继承权重为0,标签选择器为1,类(伪类)选择器为10, id选择器100,行内样式表为1000, !important无穷大. 继承的权重是0，如果该元素没有直接选中，不管父元素权重多高，子元素得到的权重都是0。 例子 &lt;head&gt; &lt;style&gt; /* id父亲的权重是100 */ #father { color: red; } /* p的继承权重是100 自己标签选择器的权重是1*/ /* 所以以后我们看标签到底执行那个样式,就先看这个标签有么有直接被选出来 */ p { color: pink; } body { color: red; } /* a链接浏览器默认制定了样式 蓝色，下划线，相当于a {color:blue;} */ a { color: green; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;father&quot;&gt; &lt;p&gt;你还是很好看&lt;/p&gt; &lt;/div&gt; &lt;a href=&quot;#&quot;&gt;我是单独的样式&lt;/a&gt; &lt;/body&gt; 13.3.2 权重叠加 如果是复合选择器，则会有权重叠加，需要重新计算权重。 &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;style&gt; /* 两个都是标签选择器 */ /* li权重为0,0,0,1 */ li { color: red; } /* 后代选择器 ui中li的权重=0,0,0,1+0,0,0,1=0,0,0,2*/ ul li { color: green; } /* .nav li的权重=0,0,1,0+0,0,0,1=0,0,1,1 */ .nav li { color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ul class=&quot;nav&quot;&gt; &lt;li&gt;大猪蹄子&lt;/li&gt; &lt;li&gt;大肘子&lt;/li&gt; &lt;li&gt;猪尾巴&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 小测试 div ul li ------&gt; 0,0,0,3 .nav ul -------&gt; 0,0,1,2 a:hover ----———&gt; 0,0,1,1 .nav a -------&gt; 0,0,1,1 13.4 综合练习 把第一个小li里面的文字颜色改为红色 并加粗 &lt;head&gt; &lt;style&gt; .nav li { color: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ul class=&quot;nav&quot;&gt; &lt;li&gt;人生四大悲&lt;/li&gt; &lt;li&gt;家里没宽带&lt;/li&gt; &lt;li&gt;网速不够快&lt;/li&gt; &lt;li&gt;手机没流量&lt;/li&gt; &lt;li&gt;学校没wifi&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 解 &lt;head&gt; &lt;style&gt; /* 权重是11 */ .nav li { color: red; } /* 权重的20 */ .nav .pink { color: pink; font-weight: 700; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ul class=&quot;nav&quot;&gt; &lt;li class=&quot;pink&quot;&gt;人生四大悲&lt;/li&gt; &lt;li&gt;家里没宽带&lt;/li&gt; &lt;li&gt;网速不够快&lt;/li&gt; &lt;li&gt;手机没流量&lt;/li&gt; &lt;li&gt;学校没wifi&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; "],["盒子模型.html", "14 盒子模型 14.1 看透网页布局的本质 14.2 盒子模型（Box Model） 14.3 盒子边框（border） 14.4 边框的复合写法（简写） 14.5 表格细线边框 14.6 边框会影响盒子的实际大小 14.7 内边距（padding） 14.8 内边距复合写法（简写） 14.9 padding会影响盒子实际大小 14.10 padding不撑开盒子的情况 14.11 盒子模型外边距margin 14.12 外边距典型应用（块级盒子水平居中） 14.13 嵌套块元素垂直外边距的塌陷 14.14 清除内外边距 14.15 圆角边框 14.16 盒子阴影 14.17 文字阴影 14.18 综合案例", " 14 盒子模型 页面布局要学习三大核心，盒子模型,浮动和定位.学习好盒子模型能非常好的帮助我们布局页面。 14.1 看透网页布局的本质 图3.1: 网页是有盒子组成的 网页布局过程: 1.先准备好相关的网页元素，网页元素基本都是盒子Box。 2.利用CSS设置好盒子样式，然后摆放到相应位置。（最核心） 3.往盒子里面装内容. 网页布局核心：利用CSS摆盒子。 14.2 盒子模型（Box Model） 所谓盒子模型∶就是把HTML页面中的布局元素看作是一个短形的盒子，也就是一个盛装内容的容器。CSS盒子模型本质上是一个盒子，封装周围的HTML元素，它包括:边框、外边距、内边距、和实际内容。 图14.1: 盒子的四个组成部分 图14.2: 盒子的四个组成部分 14.3 盒子边框（border） border可以设置元素的边框。边框有三部分组成:边框宽度(粗细)边框样式边框颜色 语法 border : border-width || border-style || border-color 表2.1: 盒子边框 属性 作用 border-width 定义边框粗细，单位是px border-style 边框样式，实线虚线 border-color 边框颜色 例子 &lt;head&gt; &lt;style&gt; div { width: 300px; height: 200px; /* border-width 边框粗细，一般都用px */ border-width: 5px; /* border-style 边框样式 solid实线边框 dashed虚线 dotted点线*/ /* border-style: solid; */ /* border-style: dashed; */ border-style: dotted; border-color: pink; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 14.4 边框的复合写法（简写） 语法 边框简写： border: 1px solid red; 没有顺序 边框分开写： border-top: 1px solid red; 没有顺序 例子 请给一个200*200的盒子，设置上边框为红色，其余边框为蓝色(提示︰一定注意边框的层叠性) &lt;head&gt; &lt;style&gt; div { width: 200px; height: 200px; border: 5px solid blue; /* 利用层叠性 */ border-top: 5px solid red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;/body&gt; 14.5 表格细线边框 border-collapse属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。 语法 border-collapse:collapse; collapse单词是合并的意思 border-collapse:collapse;表示相邻边框合并在一起 &lt;head&gt; &lt;style&gt; table { width: 500px; height: 250px; } table, td, th { border: 1px solid pink; /* 合并相邻的边框 */ border-collapse: collapse; text-align: center; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;table align=&quot;center&quot; width=&quot;500&quot; height=&quot;249&quot; border=&quot;1&quot; cellspacing=&quot;0&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;排名&lt;/th&gt; &lt;th&gt;关键词&lt;/th&gt; &lt;th&gt;趋势&lt;/th&gt; &lt;th&gt;进入搜索&lt;/th&gt; &lt;th&gt;最近七日&lt;/th&gt; &lt;th&gt;相关链接&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;鬼吹灯&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;down.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;鬼吹灯&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;down.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;西游记&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;up.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;鬼吹灯&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;down.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;鬼吹灯&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;down.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;鬼吹灯&lt;/td&gt; &lt;td&gt;&lt;img src=&quot;down.jpg&quot;&gt;&lt;/td&gt; &lt;td&gt;456&lt;/td&gt; &lt;td&gt;123&lt;/td&gt; &lt;td&gt; &lt;a href=&quot;#&quot;&gt;贴吧&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;图片&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;百科&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; 14.6 边框会影响盒子的实际大小 边框会额外增加盒子的实际大小。比如一个盒子长宽都是100px，四个边框是10px，那么宽和高就变成了100+20px。 因此我们有两种方案解决: 1．测量盒子大小的时候,不量边框。 2．如果测量的时候包含了边框,则需要width/height 减去边框宽度 14.7 内边距（padding） padding属性用于设置内边距，即边框与内容之间的距离。 表14.1: 内边距 属性 作用 padding-left 左内边距 padding-right 右内边距 padding-top 上内边距 padding-bottom 下内边距 14.8 内边距复合写法（简写） bg3 &lt;- tibble::tibble( 值的个数=c(&quot;padding:5px;&quot;, &quot;padding:5px 10px;&quot;, &quot;padding:5px 10px 20px;&quot;, &quot;padding:5px 10px 20px 30px;&quot;), 表达意思=c(&quot;1个值，代表上下左右都是2像素内边距&quot;, &quot;2个值，代表上下内边距5像素，左右10像素&quot;, &quot;3个值，代表上5像素，左右10像素，下20像素&quot;, &quot;4个值，顺时针，上右下左&quot;) ) knitr::kable(bg3,align=&quot;c&quot;,caption = &quot;内边距的复合写法&quot;,booktabs=TRUE) 表4.4: 内边距的复合写法 值的个数 表达意思 padding:5px; 1个值，代表上下左右都是2像素内边距 padding:5px 10px; 2个值，代表上下内边距5像素，左右10像素 padding:5px 10px 20px; 3个值，代表上5像素，左右10像素，下20像素 padding:5px 10px 20px 30px; 4个值，顺时针，上右下左 14.9 padding会影响盒子实际大小 当我们给盒子指定padding值之后，发生了2件事情。 1.内容和边框有了距离，添加了内边距。 2.padding影响了盒子实际大小。 也就是说，如果盒子已经有了宽度和高度，此时再指定内边框，会撑大盒子。 解决方案: 如果保证盒子跟效果图大小保持一致，则让width/height减去多出来的内边距大小即可。（同外边距解决方案） 例子 建立一个内边距为20，盒子宽度和高度为20px的盒子。 &lt;head&gt; &lt;style&gt; div { width: 160px; height: 160px; background-color: pink; /* 加上内边距，盒子宽度和高度还是200px */ padding: 20px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; padding会影响盒子实际大小padding会影响盒子实际大小padding会影响盒子实际大小padding会影响盒子实际大小 &lt;/div&gt; &lt;/body&gt; 14.10 padding不撑开盒子的情况 如何盒子本身没有指定width/height属性,则此时padding不会撑开盒子大小. 例如：子标签的宽度未指定时同父标签宽度，且给子标签指定padding也不会撑开盒子。 &lt;head&gt; &lt;style&gt; h1 { height: 200px; background-color: pink; /* 仅仅高度增加60px，因为没有指定宽度，宽度同父亲body标签，宽度不会增加 */ padding: 30px; } div { width: 300px; height: 100px; background-color: purple; } div p { /* 和父亲 div的宽度一样宽 300px */ padding: 30px; background-color: skyblue; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;&lt;/h1&gt; &lt;div&gt; &lt;p&gt;&lt;/p&gt; &lt;/div&gt; &lt;/body&gt; 14.11 盒子模型外边距margin 图14.3: 盒子外边框效果效果 margin属性用于设置外边距，即控制盒子和盒子之间的距离。 表6.1: 盒子外边距margin属性 属性 作用 margin-left 左外边距 margin-right 右外边距 margin-top 上外边距 margin-bottom 下外边距 marigin的简写方式与padding完全一致 例子 &lt;head&gt; &lt;style&gt; div { width: 200px; height: 200px; background-color: pink; } /* .one { */ /* margin-bottom: 20px; */ /* } */ .two { margin: 30px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;one&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;two&quot;&gt;2&lt;/div&gt; &lt;/body&gt; 14.12 外边距典型应用（块级盒子水平居中） 外边框可以让块级盒子水平居中，但必须满足两个条件。 盒子必须指定宽度（width） 盒子左右外边距都这设置为auto 语法 以下三种写法都可以： .header {width:960px; margin:0 auto;} .header {width:960px; margin-left:auto; margin-right: auto;} .header {width:960px; margin:auto;} 注意:以上方法是让块级元素水平居中，行内元素或者行内块元素水平居中给其父元素添加 text-aligncenter即可。 例子 &lt;head&gt; &lt;style&gt; .header { width: 900px; height: 200px; background-color: pink; margin: 100px auto; /* 行内元素或者行内块元素水平居中给其父元素添加 text-aligncenter即可。 */ text-align: center; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;header&quot;&gt; &lt;span&gt;里面的文字&lt;/span&gt; &lt;/div&gt; &lt;div class=&quot;header&quot;&gt; &lt;!-- 图片文字也是水平居中 --&gt; &lt;img src=&quot;../../html_css_material-master/第五天/down.jpg&quot;&gt; &lt;/div&gt; &lt;/body&gt; 14.13 嵌套块元素垂直外边距的塌陷 对于两个嵌套关系(父子关系)的块元素，父元素有上外边距同时子元素也有上外边距，此时父元素会塌陷较大的外边距值。 图14.4: 父元素塌陷示意图 解决方案: 可以为父元素定义上边框。 可以为父元素定义上内边距。 可以为父元素添加overflow:hidden。 还有其他底法，比如浮动、固定，绝对定位的盒子不会有塌陷问题，后面咱们再总结。 例子 &lt;head&gt; &lt;style&gt; .father { width: 400px; height: 400px; background-color: purple; margin-top: 50px; /* 法一：border: 1px solid transparent; */ /* 法二：padding: 1px; */ overflow: hidden; } .son { width: 200px; height: 200px; background-color: pink; margin-top: 100px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;father&quot;&gt; &lt;div class=&quot;son&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; 14.14 清除内外边距 网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一致。因此我们在布局前，首先要清除下网页元素的内外边距。 语法 * { padding :0; /*清除内边距*/ margin: 0; /*大清除外边距*/ } 注意∶行内元素为了照顾兼容性，尽量只设置左右内外边距，不要设置上下内外边距。但是转换为块级和行内块元素就可以了. **例子 &lt;head&gt; &lt;style&gt; /* 这句话也是CSS的第一行代码 */ * { margin: 0; padding: 0; } span { background-color: pink; /* 行内元素最好只应该设置左右内外边距 */ margin: 0 20px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; 123 &lt;ul&gt; &lt;li&gt;abcd&lt;/li&gt; &lt;/ul&gt; &lt;span&gt;我是行内元素尽量只设置左右内外边距&lt;/span&gt; &lt;/body&gt; 14.15 圆角边框 在CSS3中，新增了圆角边框样式，这样我们的盒子就可以变圆角了。border-radius属性用于设置元素的外边框圆角。 语法 border-radius : length; radius半径(圆的半径)原理:(椭)圆与边框的交集形成圆角效果 图14.5: 圆角边框示意图 参数值可以为数值或百分比的形式 如果是正方形，想要设置为一个圆，把数值修改为高度或者宽度的一半即可，或者直接写为50% 如果是个矩形,设置为高度的一半就可以做 该属性是一个简写属性，可以跟四个值，分别代表左上角、右上角、右下角、左下角 分开写: border-top-left-radius、border-top-right-radius、border-bottom-right-radius和border-bottom-left-radius。顺序不能颠倒。 例子 &lt;head&gt; &lt;style&gt; .yuanxing { width: 200px; height: 200px; background-color: pink; /* border-radius: 100px; */ /* 50% 就是宽度是高度的一半 值设定为正方形的一半 */ border-radius: 50%; } .juxing { width: 300px; height: 100px; background-color: pink; /* 圆角矩形 设置为高度的一半 */ border-radius: 50px; } .radi { width: 200px; height: 200px; background-color: pink; /* border-radius: 10px 20px 30px 40px; */ border-radius: 10px 40px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;/body&gt; 1. 圆形的做法 &lt;div class=&quot;yuanxing&quot;&gt;&lt;/div&gt; 2. 圆角矩形的做法 &lt;div class=&quot;juxing&quot;&gt;&lt;/div&gt; 3. 可以设置不同的圆角 &lt;div class=&quot;radi&quot;&gt;&lt;/div&gt; 14.16 盒子阴影 CSS3中新增了盒子阴影，我们可以使用box-shadow属性为盒子添加阴影。 语法 box-shadow: h-shadow v-shadow blur spread color inset; 表14.2: 盒子阴影 值 描述 h-shadow 必需。水平阴影的位置，允许负值 v-shadow 必需。垂直阴影的位置，允许负值 blur 可选，模糊距离（模糊程度，值越大越模糊） spread 可选。阴影尺寸（影子大小） color 可选。阴影的颜色。 inset 可选。将外部阴影（outset）改为内部阴影 注意 1.默认的是外阴影(outset),但是不可以写这个单词,否则导致阴影无效 2.盒子阴影不占用空间，不会影响其他盒子排列。 例子 &lt;head&gt; &lt;style&gt; div { width: 200px; height: 200px; background-color: pink; margin: 100px auto; } /* 原先盒子没有影子，鼠标经过是有阴影 */ div:hover { box-shadow: 10px 10px 10px -4px rgba(0, 0, 0, .3); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; 14.17 文字阴影 CSS3中新增了盒子阴影，我们可以使用text-shadow属性为文字添加阴影。 语法 text-shadow : h-shadow v-shadow blur color; 表14.3: 文字阴影 值 描述 h-shadow 必需。水平阴影的位置，允许负值 v-shadow 必需。垂直阴影的位置，允许负值 blur 可选，模糊距离（模糊程度，值越大越模糊） color 可选。阴影的颜色。 例子 &lt;head&gt; &lt;style&gt; div { font-size: 50px; color: orangered; font-weight: 700; text-shadow: 5px 5px 6px rgba(0, 0, 0, .3); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; 你是阴影，我是火影 &lt;/div&gt; &lt;/body&gt; 14.18 综合案例 14.18.1 新浪导航栏 如果盒子中文字数不同时，最好利用padding而不是给盒子固定宽度。 相关取值: 1.上边框为3像素,颜色为#ff8500 2.下边框为1像素颜色为#edeef0 3.盒子高度为41像素,背景颜色为#fcfcfc 4.文字颜色为#4c4c4c 图14.6: 新浪导航栏效果 &lt;head&gt; &lt;style&gt; .nav { height: 41px; border-top: 3px solid #ff8500; border-bottom: 1px solid #edeef0; background-color: #fcfcfc; /* 垂直居中 */ line-height: 41px; } .nav a { /* 行内元素没有高，需要转换为行内块元素 */ display: inline-block; height: 41px; /* 内边距上下是0 左右是20px */ padding: 0px 20px; font-size: 12px; color: #4c4c4c; /* 取消下划线 */ text-decoration: none; } .nav a:hover { background-color: #eee; color: #ff8500; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;nav&quot;&gt; &lt;a href=&quot;#&quot;&gt;设为首页&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;手机新浪网&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;移动客户端&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;微博&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;关注我&lt;/a&gt; &lt;/div&gt; &lt;/body&gt; 14.18.2 小米侧边栏修改 图4.10: 小米侧边栏效果 &lt;head&gt; &lt;style&gt; a { width: 200px; height: 40px; /* 行高等于盒子高度时，垂直居中 */ line-height: 40px; /* 块级元素 */ display: block; /* 文字颜色为白色 */ color: #fff; /* 背景颜色变灰色 */ background-color: #535758; /* 文字大小14px */ font-size: 14px; /* 去除连接下划线 */ text-decoration: none; /* 首行缩进 */ /* text-indent: 2em; */ /* 左侧内边距为30px */ padding-left: 30px; } a:hover { background-color: #FE6700; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;a href=&quot;#&quot;&gt;手机 电话卡&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;电视 盒子&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;笔记本 平板&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;出行 穿戴&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;智能 路由器&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;健康 儿童&lt;/a&gt; &lt;a href=&quot;#&quot;&gt;耳机 音响&lt;/a&gt; &lt;/body&gt; 14.18.3 产品布局 图14.7: 产品布局的布局分析 PS选取工具测出：宽度298 高度415像素 PS吸管工具测出：大背景的颜色为#f5f5f5 p.review高度：70 代码 &lt;head&gt; &lt;style&gt; * { margin: 0px; padding: 0px; } body { background-color: #f5f5f5; } a { color: #333; text-decoration: none; } .box { width: 298px; height: 415px; background-color: #fff; /* 让块级盒子水平居中对齐 */ margin: 100px auto; } .box img { /* 和父亲的宽度一样宽 */ width: 100%; } .review { height: 70px; font-size: 14px; /* 因为段落没有width属性，所以padding不会撑开盒子 */ padding: 0 28px; margin-top: 30px; } .appraise { font-size: 12px; color: #b0b0b0; padding: 0 28px; margin-top: 20px; } .info { font-size: 14px; margin-top: 15px; padding: 0 28px; } .info h4 { display: inline-block; /* 文字不加粗 */ font-weight: 400; } .info span { color: #ff6700; } .info em { font-style: normal; color: #ebe4e0; margin: 0 6px 0 15px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;box&quot;&gt; &lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;../../html_css_material-master/第五天/images/img.jpg&quot;&gt;&lt;/a&gt; &lt;p class=&quot;review&quot;&gt;快递牛，整体不错蓝牙可以说秒连。红米给力&lt;/p&gt; &lt;div class=&quot;appraise&quot;&gt;来自于117384232的评价&lt;/div&gt; &lt;div class=&quot;info&quot;&gt; &lt;h4&gt;&lt;a href=&quot;#&quot;&gt;Redmi AirDots真无线...&lt;/a&gt;&lt;/h4&gt; &lt;em&gt;|&lt;/em&gt; &lt;span&gt;99.9元&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; 本案例总结： 1.布局为啥用不同盒子,我只想用div ? 标签都是有语义的,合理的地方用合理的标签。比如产品标题就用h，大量文字段落就用p 2.为啥用辣么多类名? 类名就是给每个盒子起了一个名字,可以更好的找到这个盒子,选取盒子更容易,后期维护也方便。 3.到底用margin还是padding ? 大部分情况两个可以混用，两者各有优缺点，但是根据实际情况，总是有更简单的方法实现。（上用margin-top 左右用padding） 4.自己做没有思路? 布局有很多种实现方式，同学们可以开始先模仿我的写法，然后再做出自己的风格。最后同学们一定多运用辅助工具,比如屏幕画笔,ps等等 14.18.4 快报模块 图14.8: 快报模块效果 &lt;head&gt; &lt;style&gt; * { margin: 0; padding: 0; } li { list-style: none; } .box { width: 248px; height: 163px; border: 1px solid #ccc; margin: 100px auto; } .box h3 { height: 32px; border-bottom: 1px dotted #ccc; font-size: 14px; /* 文字不加粗 */ font-weight: 400; /* 文字垂直居中 */ line-height: 32px; /* 用margin回撑开盒子，这里没有指定宽度，yongpadding不会撑开盒子 */ /* 可以使用margin试试效果 */ padding-left: 15px; } .box ul li a { font-size: 12px; color: #ccc; text-decoration: none; } .box ul li a:hover { text-decoration: underline; } .box ul li { height: 23px; /* 垂直居中 */ line-height: 23px; padding-left: 20px; } .box ul { margin-top: 7px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;box&quot;&gt; &lt;h3&gt;品优购快报&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;【特惠】&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;【特惠】&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;【特惠】&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;【特惠】&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&quot;#&quot;&gt;【特惠】&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/body&gt; "],["浮动.html", "15 浮动", " 15 浮动 "],["其他软件.html", "16 其他软件 16.1 Vscode常用操作 16.2 PS", " 16 其他软件 16.1 Vscode常用操作 快捷键 创建文件：Ctrl+N` 保存文件：Ctrl+S` 放大页面：Ctrl++ 缩小页面：Ctrl+- 预览页面：Alt+B，或单击鼠标右键，在弹出窗口中点击Open in Default Browser 自动换行：Alt+Z,或在查看中选择自动换行 自动注释：ctrl+/ 格式化代码：Shift+Alt+F 16.2 PS 因为网页美工大部分效果图都是利用PS ( Photoshop )来做的，所以以后我们大部分切图工作都是在PS里面完成。 用“选区”拖动，可以测量大小 图3.1: 选区工具 快捷键 打开文件：Ctrl+O 打开标尺：Ctrl+R，然后右击出现的标尺，单位改为“像素” 放大视图：Ctrl++ 缩小视图：Ctrl+- 鼠标变小手，拖动PS视图 空格 取消选区：Ctrl+D 或鼠标在空白地方点一下 图6.1: PS基本界面 "],["chrome调试工具.html", "17 Chrome调试工具 17.1 打开调试工具 17.2 使用调试工具", " 17 Chrome调试工具 Chrome浏览器提供了一个非常好用的调试工具，可以用来调试我们的HTML结构和CSS样式。 17.1 打开调试工具 打开 Chrome浏览器，按下F12键或者右击页面空白处→检查，点击elements。再点击调试窗口左上角的“方框鼠标”按键后，点击页面任意位置，即可看到相应的代码。 图3.1: 调试工具中会显示HTML和CSS 17.2 使用调试工具 Ctrl+滚轮可以放大开发者工具代码大小。 上边是HTML元素结构，下边是CSS样式。 下边CSS样式可以改动数值(左右箭头或者直接输入)和查看颜色。 Ctrl +0复原浏览器大小。 如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误。 如果有样式，但是样式前面有黄色叹号提示，则是样式属性书写错误。 "],["emmet语法.html", "18 Emmet语法 18.1 快速生成HTML结构语法 18.2 快速生成CSS样式语法 18.3 快速格式化代码", " 18 Emmet语法 Emmet语法的前身是Zen coding,它使用缩写,来提高html/css的编写速度, Vscode内部已经集成该语法. 快速生成HTML结构语法 快速生成CSS样式语法 18.1 快速生成HTML结构语法 1．生成标签直接输入标签名按tab键即可比如div然后tab键，就可以生成&lt;div&gt;&lt;/div&gt; 2．如果想要生成多个相同标签加上*就可以了比如div*3就可以快速生成3个div 3．如果有父子级关系的标签，可以用&gt;比如ul &gt; li就可以了 4．如果有兄弟关系的标签，用＋就可以了比如div+p 5．如果生成带有类名或者id名字的，直接写.demo或者#two tab键就可以了 6．如果生成的div类名是有顺序的，可以用自增符号$ 7．如果想要在生成的标签内部写内容可以用{}表示 每行同样位置输入文字，Shift+Alt+鼠标下拉，选中后输入相关文字即可。 18.2 快速生成CSS样式语法 CSS基本采取简写形式即可 比如w200 按tab 可以生成 width: 200px; 比如lh26 按tab 可以生成 line-height: 25px; 18.3 快速格式化代码 第一步：VSCode中按：Shift+Alt+F 第二步： 文件→首选项→设置搜索→“format on save”，勾选。即可 只需要设置一次即可，以后都可以自动保存格式化代码。 "]]
