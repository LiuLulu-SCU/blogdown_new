[["浮动.html", "15 浮动 15.1 传统网页布局的三种方式 15.2 标准流（普通流/文档流） 15.3 为什么需要浮动 15.4 什么是浮动 15.5 浮动元素标准流经常和标准流父亲搭配使用 15.6 常见的网页布局 15.7 浮动布局注意点 15.8 清除浮动", " 15 浮动 15.1 传统网页布局的三种方式 网页布局的本质-用CSS来摆放盒子，把盒子摆放到相应的位置。 CSS提供了三种传统的布局方式（如何对盒子进行排列顺序） 普通流（标准流） 浮动 定位 15.2 标准流（普通流/文档流） 所谓的标准流:就是块级元素或行内元素按照规定好默认方式排列. 块级元素会独占一行，从上向下顺序排列。 常用元素:div、hr、p、h1~h6、ul、ol、dl、form、table 行内元素会按照顺序，从左到右顺序排列，碰到父元素边缘则自动换行。 常用元素: span、a、 i、em等 以上都是标准流布局，我们前面学习的就是标准流，标准流是最基本的布局方式。 这三种布局方式都是用来摆放盒子的，盒子摆放到合适位置，布局自然就完成了。 注意︰实际开发中，一个页面基本都包含了这三种布局方式。 15.3 为什么需要浮动 提问：我们用标准流能实现以下效果吗？ 如何让多个块级盒子（div）水平排列成一行？ 比较难，虽然转换为行内块元素可以实现一行显示，但是他们之间会有大的空白缝隙，很难控制。 &lt;head&gt; &lt;style&gt; div { width: 150px; height: 200px; background-color: pink; /* 转化为行内块元素，就可以把多个div放在一行上面 */ display: inline-block; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;2&lt;/div&gt; &lt;div&gt;3&lt;/div&gt; &lt;/body&gt; 提问：我们用标准流能很方便的实现如下效果吗？ 如何实现两个盒子左右对齐。 总结︰有很多的布局效果，标准流没有办法完成，此时就可以利用浮动完成布局。因为浮动可以改变元素标签默认的排列方式. 浮动最典型的应用:可以让多个块级元素一行内排列显示。 网页布局第一准则∶多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动。 15.4 什么是浮动 float属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。 语法 选择器{ float:属性值;} 属性值 描述 none 元素不浮动 left 元素左浮动 right 元素右浮动 例子 &lt;head&gt; &lt;style&gt; .left, .right { width: 200px; height: 200px; background-color: pink; float: left; } .right { float: right; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;left&quot;&gt;左青龙&lt;/div&gt; &lt;div class=&quot;right&quot;&gt;右白虎&lt;/div&gt; &lt;/body&gt; ##浮动特性 加了浮动之后的元素,会具有很多特性,需要我们掌握的。 1．浮动元素会脱离标准流(脱标) 2．浮动的元素会一行内显示并且元素顶部对齐 3．浮动的元素会具有行内块元素的特性 15.4.1 脱标 设置浮动（float）的元素最重要的的特性： 脱离标准普通流的控制（浮）移动到指定位置（动），俗称脱标。 浮动的盒子不再保留原先的位置。 例子 &lt;head&gt; &lt;style&gt; /* 设置了浮动（float）的元素会： */ /* 1.脱离标准普通流的控制（浮）移动到指定位置（动）。 */ /* 2.浮动的盒子不在保留在原先位置 */ .box1 { width: 200px; height: 200px; background-color: pink; float: left; } .box2 { width: 300px; height: 300px; background-color: rgb(0, 153, 255); } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;box1&quot;&gt;浮动的盒子&lt;/div&gt; &lt;div class=&quot;box2&quot;&gt;标准流的盒子&lt;/div&gt; &lt;/body&gt; 15.4.2 浮动盒子一行显示 如果多个盒子都设置了浮动，则它们会按照属性值一行内显示并且顶端对齐排列。 注意∶浮动的元素是互相贴靠在一起的(不会有缝隙），如果父级宽度装不下这些浮动的盒子，多出的盒子会另起一行对齐。 例子 &lt;head&gt; &lt;style&gt; div { float: left; width: 200px; height: 200px; background-color: pink; } .two { background-color: purple; height: 250px; } .four { background-color: skyblue; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt;1&lt;/div&gt; &lt;div class=&quot;two&quot;&gt;2&lt;/div&gt; &lt;div&gt;3&lt;/div&gt; &lt;div class=&quot;four&quot;&gt;4&lt;/div&gt; &lt;/body&gt; 15.4.3 浮动元素具有行内块特性 任何元素都可以浮动。不管原先是什么模式的元素（块级元素，行内元素），添加浮动之后具有行内块元素相似的特性。 如果块级盒子没有设置宽度，默认宽度和父级一样宽，但是添加浮动后，它的大小根据内容来决定 浮动的盒子中间是没有缝隙的，是紧换着一起的 行内元素同理，可以设置高度和宽度。 例子 &lt;head&gt; &lt;style&gt; span, div { width: 200px; height: 100px; background-color: pink; float: left; } /* 行内块元素如果没有指定宽度，其宽度由文字内容多少决定 */ p { float: right; height: 200px; background-color: purple; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;span&gt;span1&lt;/span&gt; &lt;span&gt;span2&lt;/span&gt; &lt;div&gt;div&lt;/div&gt; &lt;p&gt;p&lt;/p&gt; &lt;/body&gt; 15.5 浮动元素标准流经常和标准流父亲搭配使用 为了约束浮动元素位置，网页布局一般采取的策略是： 先用标准流的父亲元素排列上下位置，之后内部子元素采取浮动排列左右位置，符合网页布局第一准则 网页布局第二准则：先设置盒子大小，再设置盒子的位置。 例子 &lt;head&gt; &lt;style&gt; .box { width: 1200px; height: 460px; background-color: pink; margin: 0 auto; } .left { width: 230px; height: 460px; background-color: purple; float: left; } .right { width: 970px; height: 460px; background-color: skyblue; float: left; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;left&quot;&gt;左侧&lt;/div&gt; &lt;div class=&quot;right&quot;&gt;右侧&lt;/div&gt; &lt;/div&gt; &lt;/body&gt; 例子2 &lt;head&gt; &lt;style&gt; * { margin: 0; padding: 0; } li { list-style: none; } .box { height: 285px; width: 1226px; background-color: pink; margin: 0 auto; } .box li { width: 296px; height: 285px; background-color: purple; float: left; margin-right: 14px; } /* 这里必须写 .box .last 要注意权重的问题 */ .box .last { margin-right: 0; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;ul class=&quot;box&quot;&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li class=&quot;last&quot;&gt;4&lt;/li&gt; &lt;/ul&gt; &lt;/body&gt; 例子3 &lt;head&gt; &lt;style&gt; .box { width: 1226px; height: 615px; background-color: pink; margin: 0 auto; } .left { width: 234px; height: 615px; background-color: purple; float: left; } .right { width: 992px; height: 615px; background-color: skyblue; float: left; } .right&gt;div { width: 234px; height: 300px; background-color: pink; float: left; margin-left: 14px; margin-bottom: 14px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;left&quot;&gt;左青龙&lt;/div&gt; &lt;div class=&quot;right&quot;&gt; &lt;div&gt;1&lt;/div&gt; &lt;div&gt;2&lt;/div&gt; &lt;div&gt;3&lt;/div&gt; &lt;div&gt;4&lt;/div&gt; &lt;div&gt;5&lt;/div&gt; &lt;div&gt;6&lt;/div&gt; &lt;div&gt;7&lt;/div&gt; &lt;div&gt;8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; 15.6 常见的网页布局 例子 &lt;head&gt; &lt;style&gt; * { margin: 0; padding: 0; } li { list-style: none; } .top { height: 50px; background-color: gray; } .banner { width: 980px; height: 150px; background-color: gray; margin: 10px auto; } .box { width: 980px; margin: 0 auto; height: 300px; background-color: pink; } .box li { width: 237px; height: 300px; background-color: gray; float: left; margin-right: 10px; } .box .last { margin-right: 0; } .footer { height: 200px; background-color: gray; margin-top: 10px; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;top&quot;&gt;top&lt;/div&gt; &lt;div class=&quot;banner&quot;&gt;banner&lt;/div&gt; &lt;div class=&quot;box&quot;&gt; &lt;ul&gt; &lt;li&gt;1&lt;/li&gt; &lt;li&gt;2&lt;/li&gt; &lt;li&gt;3&lt;/li&gt; &lt;li class=&quot;last&quot;&gt;4&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class=&quot;footer&quot;&gt;footer&lt;/div&gt; &lt;/body&gt; 15.7 浮动布局注意点 1.浮动和标准流的父盒子搭配。 先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置 2.一个元素浮动了，理论上其余的兄弟元素也要浮动。 一个盒子里面有多个子盒子，如果其中一个盒子浮动了，那么其他兄弟也应该浮动，以防止引起问题。浮动的盒子只会影响浮动盒子后面的标准流不会影响前面的标准流. 15.8 清除浮动 15.8.1 为什么要清除浮动 我们前面浮动元素有一个标准流的父元素,他们有一个共同的特点,都是有高度的。但是,所有的父盒子都必须有高度吗? 理想中的状态,让子盒子撑开父亲.有多少孩子,我父盒子就有多高. 由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为0时，就会影响下面的标准流盒子。 由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响。 15.8.2 清除浮动的本质 清除浮动的本质是清除浮动元素造成的影响 如果父盒子本身有高度，则不需要清除浮动 清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了 语法 选择器 {clear;属性值;} 属性值 描述 left 不允许左侧有浮动元素（清除左侧浮动的影响） right 不允许右侧有浮动（清除右侧浮动的影响） both 同时清除左右两侧浮动的影响 在实际工作中，几乎只用clear:both; 清除浮动的策略是：闭合浮动 "]]
